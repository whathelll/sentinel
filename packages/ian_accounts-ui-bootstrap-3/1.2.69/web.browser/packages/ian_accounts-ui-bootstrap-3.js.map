{"version":3,"sources":["ian:accounts-ui-bootstrap-3/accounts_ui.js","ian:accounts-ui-bootstrap-3/i18n/en.i18n.js","ian:accounts-ui-bootstrap-3/i18n/es.i18n.js","ian:accounts-ui-bootstrap-3/i18n/ca.i18n.js","ian:accounts-ui-bootstrap-3/i18n/fr.i18n.js","ian:accounts-ui-bootstrap-3/i18n/de.i18n.js","ian:accounts-ui-bootstrap-3/i18n/it.i18n.js","ian:accounts-ui-bootstrap-3/i18n/pt-PT.i18n.js","ian:accounts-ui-bootstrap-3/i18n/pt-BR.i18n.js","ian:accounts-ui-bootstrap-3/i18n/pt.i18n.js","ian:accounts-ui-bootstrap-3/i18n/ru.i18n.js","ian:accounts-ui-bootstrap-3/i18n/el.i18n.js","ian:accounts-ui-bootstrap-3/i18n/ko.i18n.js","ian:accounts-ui-bootstrap-3/i18n/ar.i18n.js","ian:accounts-ui-bootstrap-3/i18n/pl.i18n.js","ian:accounts-ui-bootstrap-3/i18n/zh-CN.i18n.js","ian:accounts-ui-bootstrap-3/i18n/zh-TW.i18n.js","ian:accounts-ui-bootstrap-3/i18n/zh.i18n.js","ian:accounts-ui-bootstrap-3/i18n/nl.i18n.js","ian:accounts-ui-bootstrap-3/i18n/ja.i18n.js","ian:accounts-ui-bootstrap-3/i18n/he.i18n.js","ian:accounts-ui-bootstrap-3/i18n.js","ian:accounts-ui-bootstrap-3/login_buttons.html","ian:accounts-ui-bootstrap-3/login_buttons_single.html","ian:accounts-ui-bootstrap-3/login_buttons_dropdown.html","ian:accounts-ui-bootstrap-3/login_buttons_dialogs.html","ian:accounts-ui-bootstrap-3/login_buttons_session.js","ian:accounts-ui-bootstrap-3/login_buttons.js","ian:accounts-ui-bootstrap-3/login_buttons_single.js","ian:accounts-ui-bootstrap-3/login_buttons_dropdown.js","ian:accounts-ui-bootstrap-3/login_buttons_dialogs.js"],"names":[],"mappings":";;;;;;;;AAAA,kB;AACA,kB;AACA,C;;AAEA,4B;AACA,yB;AACA,wB;AACA,yB;AACA,0B;AACA,0B;AACA,6B;AACA,gC;AACA,+B;AACA,G;AACA,C;;AAEA,+C;AACA,4B;AACA,gD;AACA,yB;AACA,E;AACA,C;;AAEA,wC;AACA,yB;AACA,yI;AACA,2E;;AAEA,wC;AACA,oC;AACA,8D;AACA,G;AACA,I;AACA,C;AACA,6D;AACA,C;AACA,oC;AACA,oC;AACA,kB;AACA,gC;AACA,wB;AACA,iC;AACA,mB;AACA,e;AACA,qC;AACA,kD;AACA,2F;AACA,W;AACA,6E;AACA,I;AACA,U;AACA,qH;AACA,G;AACA,E;;AAEA,wE;AACA,8E;AACA,8E;;AAEA,kC;AACA,kC;AACA,+D;AACA,0D;AACA,wG;AACA,0C;AACA,2F;AACA,W;AACA,6D;AACA,I;AACA,K;AACA,E;AACA,oG;AACA,+E;AACA,S;AACA,kC;AACA,6D;AACA,+C;AACA,2H;AACA,K;AACA,8C;AACA,0B;AACA,K;AACA,0D;AACA,M;AACA,G;AACA,E;;AAEA,mC;AACA,mC;AACA,iE;AACA,6B;AACA,gH;AACA,I;AACA,2D;AACA,yG;AACA,W;AACA,8D;AACA,I;AACA,K;AACA,E;;AAEA,mC;AACA,mC;AACA,iE;AACA,6B;AACA,gH;AACA,I;AACA,2D;AACA,yG;AACA,W;AACA,8D;AACA,I;AACA,K;AACA,E;AACA,E;;AAEA,gD;AACA,kE;AACA,E;;;;;;;;;;;;;;;;;;;;ACtHA,gB;AACA,uB;AACA,+B;AACA,8B;AACA,2C;AACA,mB;AACA,wB;AACA,G;AACA,uB;AACA,6B;AACA,8B;AACA,2C;AACA,kB;AACA,wB;AACA,G;AACA,2B;AACA,qC;AACA,oB;AACA,G;AACA,8B;AACA,qB;AACA,G;AACA,uC;AACA,8B;AACA,qB;AACA,G;AACA,iC;AACA,oB;AACA,Y;AACA,G;AACA,iD;AACA,U;AACA,G;AACA,wC;AACA,mB;AACA,oB;AACA,6B;AACA,6B;AACA,G;AACA,sB;AACA,iB;AACA,0B;AACA,+B;AACA,G;AACA,+B;AACA,gB;AACA,G;AACA,8B;AACA,4B;AACA,kB;AACA,G;AACA,0C;AACA,6B;AACA,yB;AACA,G;AACA,0C;AACA,qB;AACA,G;AACA,yB;AACA,iD;AACA,G;AACA,e;AACA,uC;AACA,uB;AACA,iB;AACA,sB;AACA,G;AACA,gB;AACA,uB;AACA,iB;AACA,+B;AACA,uB;AACA,mC;AACA,G;AACA,wB;AACA,sC;AACA,8B;AACA,0C;AACA,G;AACA,iB;AACA,0B;AACA,qC;AACA,G;AACA,iB;AACA,iC;AACA,gC;AACA,0C;AACA,kE;AACA,kE;AACA,8C;AACA,kE;AACA,uC;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC7FA,gB;AACA,uB;AACA,oC;AACA,kC;AACA,kD;AACA,qB;AACA,mB;AACA,G;AACA,uB;AACA,kC;AACA,kC;AACA,kD;AACA,mB;AACA,8B;AACA,G;AACA,2B;AACA,4C;AACA,mB;AACA,G;AACA,8B;AACA,oB;AACA,G;AACA,uC;AACA,iC;AACA,0B;AACA,G;AACA,iC;AACA,2B;AACA,mB;AACA,G;AACA,iD;AACA,S;AACA,G;AACA,wC;AACA,kB;AACA,2B;AACA,wC;AACA,0B;AACA,G;AACA,sB;AACA,8B;AACA,kC;AACA,6C;AACA,G;AACA,+B;AACA,kB;AACA,G;AACA,8B;AACA,+B;AACA,oB;AACA,G;AACA,0C;AACA,kC;AACA,0B;AACA,G;AACA,0C;AACA,0B;AACA,G;AACA,yB;AACA,uD;AACA,G;AACA,e;AACA,kD;AACA,sB;AACA,8B;AACA,wB;AACA,G;AACA,gB;AACA,sB;AACA,8B;AACA,uC;AACA,yB;AACA,wC;AACA,G;AACA,wB;AACA,uC;AACA,kC;AACA,iD;AACA,G;AACA,gB;AACA,wB;AACA,0C;AACA,G;AACA,iB;AACA,uC;AACA,8C;AACA,6C;AACA,oF;AACA,6E;AACA,uD;AACA,+E;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC5FA,gB;AACA,uB;AACA,oC;AACA,kC;AACA,sD;AACA,uB;AACA,mB;AACA,G;AACA,uB;AACA,kC;AACA,kC;AACA,sD;AACA,mB;AACA,+B;AACA,G;AACA,2B;AACA,4C;AACA,mB;AACA,G;AACA,8B;AACA,oB;AACA,G;AACA,uC;AACA,kC;AACA,0B;AACA,G;AACA,iC;AACA,2B;AACA,oB;AACA,G;AACA,iD;AACA,Y;AACA,G;AACA,wC;AACA,kB;AACA,2B;AACA,uC;AACA,2B;AACA,G;AACA,sB;AACA,8B;AACA,iC;AACA,iC;AACA,G;AACA,+B;AACA,oB;AACA,G;AACA,8B;AACA,gC;AACA,sB;AACA,G;AACA,0C;AACA,kC;AACA,yB;AACA,G;AACA,0C;AACA,0B;AACA,G;AACA,yB;AACA,mD;AACA,G;AACA,e;AACA,gD;AACA,qB;AACA,8B;AACA,yB;AACA,G;AACA,gB;AACA,qB;AACA,8B;AACA,uC;AACA,0B;AACA,6C;AACA,G;AACA,wB;AACA,wC;AACA,kC;AACA,qD;AACA,G;AACA,gB;AACA,uB;AACA,yC;AACA,G;AACA,iB;AACA,uC;AACA,kC;AACA,8C;AACA,0E;AACA,0E;AACA,uD;AACA,4E;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC5FA,gB;AACA,uB;AACA,0C;AACA,sC;AACA,0D;AACA,oB;AACA,mC;AACA,G;AACA,uB;AACA,mC;AACA,sC;AACA,0D;AACA,mB;AACA,mC;AACA,G;AACA,2B;AACA,6C;AACA,mB;AACA,G;AACA,8B;AACA,oB;AACA,G;AACA,uC;AACA,sC;AACA,wB;AACA,G;AACA,iC;AACA,sB;AACA,mB;AACA,G;AACA,iD;AACA,U;AACA,G;AACA,wC;AACA,kB;AACA,sB;AACA,kC;AACA,0B;AACA,G;AACA,sB;AACA,iB;AACA,yC;AACA,8C;AACA,G;AACA,+B;AACA,iB;AACA,G;AACA,8B;AACA,oC;AACA,mB;AACA,G;AACA,0C;AACA,kC;AACA,0B;AACA,G;AACA,0C;AACA,wB;AACA,G;AACA,yB;AACA,qE;AACA,G;AACA,e;AACA,gD;AACA,gC;AACA,iB;AACA,0B;AACA,G;AACA,gB;AACA,gC;AACA,iB;AACA,gC;AACA,2B;AACA,8C;AACA,G;AACA,wB;AACA,yC;AACA,sC;AACA,yD;AACA,G;AACA,gB;AACA,uB;AACA,yC;AACA,G;AACA,iB;AACA,yC;AACA,+C;AACA,8C;AACA,gF;AACA,2E;AACA,iE;AACA,oF;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC5FA,gB;AACA,uB;AACA,iC;AACA,gC;AACA,mD;AACA,sB;AACA,2B;AACA,G;AACA,uB;AACA,2B;AACA,gC;AACA,mD;AACA,sB;AACA,2B;AACA,G;AACA,2B;AACA,wC;AACA,sB;AACA,G;AACA,8B;AACA,sB;AACA,G;AACA,uC;AACA,8B;AACA,qB;AACA,G;AACA,iC;AACA,qB;AACA,oB;AACA,G;AACA,iD;AACA,Y;AACA,G;AACA,wC;AACA,sB;AACA,qB;AACA,gC;AACA,gC;AACA,G;AACA,sB;AACA,iB;AACA,iC;AACA,yC;AACA,G;AACA,+B;AACA,mB;AACA,G;AACA,8B;AACA,4B;AACA,qB;AACA,G;AACA,0C;AACA,6B;AACA,6B;AACA,G;AACA,0C;AACA,qB;AACA,G;AACA,yB;AACA,wD;AACA,G;AACA,e;AACA,6C;AACA,2B;AACA,iB;AACA,sB;AACA,G;AACA,gB;AACA,2B;AACA,iB;AACA,iC;AACA,uB;AACA,yC;AACA,G;AACA,wB;AACA,wC;AACA,gC;AACA,kD;AACA,G;AACA,iB;AACA,yB;AACA,sC;AACA,G;AACA,iB;AACA,0C;AACA,0C;AACA,yC;AACA,8E;AACA,mE;AACA,6D;AACA,kF;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC5FA,gB;AACA,uB;AACA,iC;AACA,gC;AACA,gD;AACA,oB;AACA,4B;AACA,G;AACA,uB;AACA,+B;AACA,gC;AACA,gD;AACA,mB;AACA,4B;AACA,G;AACA,2B;AACA,yC;AACA,mB;AACA,G;AACA,8B;AACA,oB;AACA,G;AACA,uC;AACA,8B;AACA,iB;AACA,G;AACA,iC;AACA,mB;AACA,kB;AACA,G;AACA,iD;AACA,c;AACA,G;AACA,wC;AACA,iB;AACA,mB;AACA,kC;AACA,8B;AACA,G;AACA,sB;AACA,iB;AACA,iC;AACA,kC;AACA,G;AACA,+B;AACA,kB;AACA,G;AACA,8B;AACA,4B;AACA,mB;AACA,G;AACA,0C;AACA,2B;AACA,yB;AACA,G;AACA,0C;AACA,iB;AACA,G;AACA,yB;AACA,2D;AACA,G;AACA,e;AACA,sC;AACA,uB;AACA,iB;AACA,sB;AACA,G;AACA,gB;AACA,uB;AACA,iB;AACA,gC;AACA,uB;AACA,sC;AACA,G;AACA,wB;AACA,uC;AACA,gC;AACA,+C;AACA,G;AACA,gB;AACA,wB;AACA,qC;AACA,G;AACA,iB;AACA,iC;AACA,mC;AACA,0C;AACA,oE;AACA,oE;AACA,sD;AACA,iE;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC5FA,Q;AACA,uB;AACA,uC;AACA,oC;AACA,uD;AACA,qB;AACA,iC;AACA,G;AACA,uB;AACA,0C;AACA,oC;AACA,uD;AACA,mB;AACA,iC;AACA,G;AACA,2B;AACA,iC;AACA,oB;AACA,G;AACA,8B;AACA,oB;AACA,G;AACA,uC;AACA,kC;AACA,iB;AACA,G;AACA,iC;AACA,mB;AACA,gB;AACA,G;AACA,iD;AACA,U;AACA,G;AACA,wC;AACA,kB;AACA,mB;AACA,wC;AACA,uB;AACA,G;AACA,sB;AACA,kB;AACA,iC;AACA,yB;AACA,iC;AACA,G;AACA,+B;AACA,kB;AACA,G;AACA,8B;AACA,gC;AACA,oB;AACA,G;AACA,0C;AACA,2B;AACA,yB;AACA,G;AACA,0C;AACA,iB;AACA,G;AACA,yB;AACA,wD;AACA,G;AACA,e;AACA,0C;AACA,yB;AACA,kB;AACA,2B;AACA,G;AACA,gB;AACA,yB;AACA,kB;AACA,gC;AACA,4B;AACA,8C;AACA,G;AACA,wB;AACA,yC;AACA,oC;AACA,sD;AACA,G;AACA,gB;AACA,yB;AACA,2C;AACA,G;AACA,iB;AACA,qE;AACA,kC;AACA,qE;AACA,2D;AACA,4C;AACA,+C;AACA,6E;AACA,E;AACA,E;;;;;;;;;;;;;;;;;;;AC7FA,Q;AACA,uB;AACA,+B;AACA,4B;AACA,+C;AACA,qB;AACA,yB;AACA,G;AACA,uB;AACA,+B;AACA,4B;AACA,+C;AACA,mB;AACA,yB;AACA,G;AACA,2B;AACA,iC;AACA,oB;AACA,G;AACA,8B;AACA,oB;AACA,G;AACA,uC;AACA,0B;AACA,iB;AACA,G;AACA,iC;AACA,mB;AACA,iB;AACA,G;AACA,iD;AACA,U;AACA,G;AACA,wC;AACA,kB;AACA,kB;AACA,gC;AACA,wB;AACA,G;AACA,sB;AACA,kB;AACA,yB;AACA,iC;AACA,G;AACA,+B;AACA,kB;AACA,G;AACA,8B;AACA,wB;AACA,oB;AACA,G;AACA,0C;AACA,0B;AACA,0B;AACA,G;AACA,0C;AACA,iB;AACA,G;AACA,yB;AACA,wD;AACA,G;AACA,e;AACA,uC;AACA,sB;AACA,kB;AACA,mB;AACA,G;AACA,gB;AACA,sB;AACA,kB;AACA,gC;AACA,oB;AACA,sC;AACA,G;AACA,wB;AACA,iC;AACA,4B;AACA,8C;AACA,G;AACA,gB;AACA,yB;AACA,mC;AACA,G;AACA,iB;AACA,yC;AACA,kC;AACA,uC;AACA,+D;AACA,6D;AACA,gD;AACA,qE;AACA,E;AACA,E;;;;;;;;;;;;;;;;;;;AC5FA,qB;AACA,wB;AACA,wB;;;;;;;;;;;;;;;;;;;ACFA,gB;AACA,uB;AACA,2B;AACA,8B;AACA,6C;AACA,mB;AACA,4B;AACA,G;AACA,uB;AACA,0B;AACA,8B;AACA,6C;AACA,mB;AACA,4B;AACA,G;AACA,2B;AACA,gC;AACA,uB;AACA,G;AACA,8B;AACA,uB;AACA,G;AACA,uC;AACA,8B;AACA,kB;AACA,G;AACA,iC;AACA,kB;AACA,0B;AACA,G;AACA,iD;AACA,W;AACA,G;AACA,wC;AACA,oB;AACA,kB;AACA,2B;AACA,8B;AACA,G;AACA,sB;AACA,iB;AACA,2B;AACA,oC;AACA,G;AACA,+B;AACA,gB;AACA,G;AACA,8B;AACA,4B;AACA,kB;AACA,G;AACA,0C;AACA,4B;AACA,oC;AACA,G;AACA,0C;AACA,kB;AACA,G;AACA,yB;AACA,iD;AACA,G;AACA,e;AACA,gD;AACA,+B;AACA,iB;AACA,oB;AACA,G;AACA,gB;AACA,+B;AACA,iB;AACA,qC;AACA,qB;AACA,mC;AACA,G;AACA,wB;AACA,oC;AACA,8B;AACA,4C;AACA,G;AACA,iB;AACA,gC;AACA,mC;AACA,G;AACA,iB;AACA,yC;AACA,qC;AACA,2C;AACA,gF;AACA,uE;AACA,4C;AACA,mE;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC5FA,gB;AACA,uB;AACA,2B;AACA,8B;AACA,0C;AACA,oB;AACA,2B;AACA,G;AACA,uB;AACA,2B;AACA,8B;AACA,0C;AACA,oB;AACA,2B;AACA,G;AACA,2B;AACA,wE;AACA,qB;AACA,G;AACA,8B;AACA,sB;AACA,G;AACA,uC;AACA,6B;AACA,uB;AACA,G;AACA,iC;AACA,oB;AACA,e;AACA,G;AACA,iD;AACA,S;AACA,G;AACA,wC;AACA,uB;AACA,oB;AACA,qC;AACA,qC;AACA,G;AACA,sB;AACA,2C;AACA,2B;AACA,0E;AACA,G;AACA,+B;AACA,mB;AACA,G;AACA,8B;AACA,2B;AACA,mB;AACA,G;AACA,0C;AACA,2B;AACA,0B;AACA,G;AACA,0C;AACA,uB;AACA,G;AACA,yB;AACA,4D;AACA,G;AACA,e;AACA,0E;AACA,2B;AACA,2C;AACA,qB;AACA,G;AACA,gB;AACA,2B;AACA,2C;AACA,oD;AACA,sB;AACA,iC;AACA,G;AACA,wB;AACA,oC;AACA,8B;AACA,yC;AACA,G;AACA,gB;AACA,uC;AACA,qC;AACA,G;AACA,iB;AACA,iC;AACA,2E;AACA,0C;AACA,+E;AACA,yE;AACA,kD;AACA,iE;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC5FA,gB;AACA,uB;AACA,sB;AACA,0B;AACA,oC;AACA,e;AACA,c;AACA,G;AACA,uB;AACA,wB;AACA,0B;AACA,oC;AACA,e;AACA,c;AACA,G;AACA,2B;AACA,8B;AACA,e;AACA,G;AACA,8B;AACA,gB;AACA,G;AACA,uC;AACA,wB;AACA,iB;AACA,G;AACA,iC;AACA,gB;AACA,c;AACA,G;AACA,iD;AACA,U;AACA,G;AACA,wC;AACA,gB;AACA,gB;AACA,2B;AACA,qB;AACA,G;AACA,sB;AACA,kB;AACA,sB;AACA,mC;AACA,G;AACA,+B;AACA,Y;AACA,G;AACA,8B;AACA,sB;AACA,c;AACA,G;AACA,0C;AACA,4B;AACA,kB;AACA,G;AACA,0C;AACA,iB;AACA,G;AACA,yB;AACA,yC;AACA,G;AACA,e;AACA,sC;AACA,qB;AACA,kB;AACA,kB;AACA,G;AACA,gB;AACA,qB;AACA,kB;AACA,0B;AACA,mB;AACA,4B;AACA,G;AACA,wB;AACA,6B;AACA,0B;AACA,mC;AACA,G;AACA,gB;AACA,uB;AACA,kC;AACA,G;AACA,iB;AACA,gC;AACA,6B;AACA,mC;AACA,+C;AACA,6C;AACA,sC;AACA,iD;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC5FA,gB;AACA,wB;AACA,gC;AACA,uC;AACA,oD;AACA,kB;AACA,gB;AACA,I;AACA,wB;AACA,0B;AACA,6B;AACA,oD;AACA,mB;AACA,gB;AACA,I;AACA,4B;AACA,gC;AACA,qB;AACA,I;AACA,+B;AACA,oB;AACA,I;AACA,wC;AACA,8B;AACA,2B;AACA,I;AACA,kC;AACA,mB;AACA,oB;AACA,I;AACA,kD;AACA,Y;AACA,I;AACA,yC;AACA,mB;AACA,mB;AACA,8B;AACA,2B;AACA,I;AACA,uB;AACA,oB;AACA,kC;AACA,+B;AACA,I;AACA,gC;AACA,e;AACA,I;AACA,+B;AACA,4B;AACA,iB;AACA,I;AACA,2C;AACA,iC;AACA,sB;AACA,I;AACA,2C;AACA,mB;AACA,I;AACA,0B;AACA,8C;AACA,I;AACA,gB;AACA,oD;AACA,6B;AACA,oB;AACA,yB;AACA,I;AACA,iB;AACA,6B;AACA,oB;AACA,iC;AACA,0B;AACA,wC;AACA,I;AACA,yB;AACA,yC;AACA,qC;AACA,mD;AACA,I;AACA,kB;AACA,4B;AACA,gD;AACA,I;AACA,kB;AACA,uC;AACA,8B;AACA,uC;AACA,mE;AACA,gE;AACA,gD;AACA,qE;AACA,oC;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;AC7FA,gB;AACA,uB;AACA,yB;AACA,4B;AACA,2C;AACA,mB;AACA,uB;AACA,G;AACA,uB;AACA,yB;AACA,4B;AACA,2C;AACA,oB;AACA,uB;AACA,G;AACA,2B;AACA,+C;AACA,mB;AACA,G;AACA,8B;AACA,mB;AACA,G;AACA,uC;AACA,0B;AACA,wB;AACA,G;AACA,iC;AACA,wB;AACA,uB;AACA,G;AACA,iD;AACA,W;AACA,G;AACA,wC;AACA,mB;AACA,yB;AACA,iC;AACA,2B;AACA,G;AACA,sB;AACA,iB;AACA,yB;AACA,mC;AACA,G;AACA,+B;AACA,gB;AACA,G;AACA,8B;AACA,wB;AACA,kB;AACA,G;AACA,0C;AACA,kC;AACA,wB;AACA,G;AACA,0C;AACA,wB;AACA,G;AACA,yB;AACA,wD;AACA,G;AACA,e;AACA,iD;AACA,gC;AACA,iB;AACA,mB;AACA,G;AACA,gB;AACA,gC;AACA,iB;AACA,kC;AACA,oB;AACA,kC;AACA,G;AACA,wB;AACA,kC;AACA,4B;AACA,0C;AACA,G;AACA,iB;AACA,6B;AACA,4C;AACA,G;AACA,iB;AACA,6C;AACA,oC;AACA,yC;AACA,yE;AACA,uE;AACA,uC;AACA,gE;AACA,0C;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC7FA,Q;AACA,0B;AACA,sB;AACA,2B;AACA,kC;AACA,qB;AACA,oB;AACA,M;AACA,0B;AACA,wB;AACA,2B;AACA,kC;AACA,qB;AACA,oB;AACA,M;AACA,8B;AACA,8B;AACA,qB;AACA,M;AACA,iC;AACA,qB;AACA,M;AACA,0C;AACA,yB;AACA,qB;AACA,M;AACA,oC;AACA,qB;AACA,gB;AACA,M;AACA,oD;AACA,e;AACA,M;AACA,2C;AACA,qB;AACA,qB;AACA,wB;AACA,yB;AACA,M;AACA,yB;AACA,uB;AACA,sB;AACA,kC;AACA,M;AACA,kC;AACA,kB;AACA,M;AACA,iC;AACA,uB;AACA,oB;AACA,M;AACA,6C;AACA,0B;AACA,uB;AACA,M;AACA,6C;AACA,qB;AACA,M;AACA,4B;AACA,mC;AACA,M;AACA,kB;AACA,sC;AACA,wB;AACA,uB;AACA,sB;AACA,M;AACA,mB;AACA,wB;AACA,uB;AACA,+B;AACA,uB;AACA,6B;AACA,M;AACA,2B;AACA,gC;AACA,2B;AACA,iC;AACA,M;AACA,mB;AACA,6B;AACA,iC;AACA,M;AACA,oB;AACA,8B;AACA,mC;AACA,kC;AACA,sC;AACA,qC;AACA,sC;AACA,2C;AACA,gC;AACA,K;AACA,E;;;;;;;;;;;;;;;;;;;AC7FA,Q;AACA,0B;AACA,sB;AACA,2B;AACA,kC;AACA,qB;AACA,oB;AACA,M;AACA,0B;AACA,wB;AACA,2B;AACA,kC;AACA,qB;AACA,oB;AACA,M;AACA,8B;AACA,4B;AACA,qB;AACA,M;AACA,iC;AACA,qB;AACA,M;AACA,0C;AACA,yB;AACA,qB;AACA,M;AACA,oC;AACA,qB;AACA,gB;AACA,M;AACA,oD;AACA,e;AACA,M;AACA,2C;AACA,qB;AACA,qB;AACA,wB;AACA,yB;AACA,M;AACA,yB;AACA,uB;AACA,sB;AACA,kC;AACA,M;AACA,kC;AACA,kB;AACA,M;AACA,iC;AACA,uB;AACA,oB;AACA,M;AACA,6C;AACA,0B;AACA,uB;AACA,M;AACA,6C;AACA,qB;AACA,M;AACA,4B;AACA,mC;AACA,M;AACA,kB;AACA,sC;AACA,wB;AACA,uB;AACA,sB;AACA,M;AACA,mB;AACA,wB;AACA,uB;AACA,+B;AACA,uB;AACA,6B;AACA,M;AACA,2B;AACA,gC;AACA,2B;AACA,iC;AACA,M;AACA,mB;AACA,6B;AACA,iC;AACA,M;AACA,oB;AACA,8B;AACA,mC;AACA,kC;AACA,sC;AACA,qC;AACA,sC;AACA,2C;AACA,gC;AACA,K;AACA,E;;;;;;;;;;;;;;;;;;;AC7FA,qB;AACA,wB;AACA,wB;;;;;;;;;;;;;;;;;;;ACFA,gB;AACA,uB;AACA,+B;AACA,kC;AACA,iD;AACA,sB;AACA,gC;AACA,G;AACA,uB;AACA,kC;AACA,kC;AACA,iD;AACA,oB;AACA,gC;AACA,G;AACA,2B;AACA,uC;AACA,oB;AACA,G;AACA,8B;AACA,qB;AACA,G;AACA,uC;AACA,oC;AACA,qB;AACA,G;AACA,iC;AACA,sB;AACA,mB;AACA,G;AACA,iD;AACA,U;AACA,G;AACA,wC;AACA,qB;AACA,sB;AACA,iC;AACA,+B;AACA,G;AACA,sB;AACA,uB;AACA,wC;AACA,sC;AACA,G;AACA,+B;AACA,mB;AACA,G;AACA,8B;AACA,kC;AACA,qB;AACA,G;AACA,0C;AACA,8B;AACA,yB;AACA,G;AACA,0C;AACA,qB;AACA,G;AACA,yB;AACA,iD;AACA,G;AACA,e;AACA,mD;AACA,6B;AACA,uB;AACA,wB;AACA,G;AACA,gB;AACA,6B;AACA,uB;AACA,2C;AACA,yB;AACA,uC;AACA,G;AACA,wB;AACA,uC;AACA,kC;AACA,gD;AACA,G;AACA,iB;AACA,gC;AACA,yC;AACA,G;AACA,iB;AACA,0C;AACA,uC;AACA,0C;AACA,2E;AACA,wE;AACA,2D;AACA,sF;AACA,kD;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC7FA,gB;AACA,uB;AACA,uB;AACA,0B;AACA,oC;AACA,kB;AACA,oB;AACA,G;AACA,uB;AACA,qB;AACA,0B;AACA,oC;AACA,gB;AACA,oB;AACA,G;AACA,2B;AACA,8B;AACA,gB;AACA,G;AACA,8B;AACA,iB;AACA,G;AACA,uC;AACA,wB;AACA,mB;AACA,G;AACA,iC;AACA,kB;AACA,U;AACA,G;AACA,iD;AACA,W;AACA,G;AACA,wC;AACA,e;AACA,kB;AACA,0B;AACA,uB;AACA,G;AACA,sB;AACA,e;AACA,uB;AACA,wB;AACA,G;AACA,+B;AACA,e;AACA,G;AACA,8B;AACA,sB;AACA,iB;AACA,G;AACA,0C;AACA,wB;AACA,oB;AACA,G;AACA,0C;AACA,mB;AACA,G;AACA,yB;AACA,uC;AACA,G;AACA,e;AACA,iC;AACA,oB;AACA,e;AACA,mB;AACA,G;AACA,gB;AACA,oB;AACA,e;AACA,0B;AACA,oB;AACA,6B;AACA,G;AACA,wB;AACA,8B;AACA,0B;AACA,mC;AACA,G;AACA,iB;AACA,yB;AACA,iC;AACA,G;AACA,iB;AACA,+B;AACA,yB;AACA,gC;AACA,4C;AACA,4C;AACA,qC;AACA,yD;AACA,uC;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC7FA,gB;AACA,uB;AACA,uB;AACA,4B;AACA,uC;AACA,kB;AACA,uB;AACA,G;AACA,uB;AACA,uB;AACA,4B;AACA,uC;AACA,kB;AACA,uB;AACA,G;AACA,2B;AACA,wC;AACA,kB;AACA,G;AACA,8B;AACA,mB;AACA,G;AACA,uC;AACA,0B;AACA,kB;AACA,G;AACA,iC;AACA,kB;AACA,a;AACA,G;AACA,iD;AACA,U;AACA,G;AACA,wC;AACA,kB;AACA,oB;AACA,yB;AACA,0B;AACA,G;AACA,sB;AACA,kC;AACA,uB;AACA,8C;AACA,G;AACA,+B;AACA,e;AACA,G;AACA,8B;AACA,wB;AACA,iB;AACA,G;AACA,0C;AACA,4B;AACA,sB;AACA,G;AACA,0C;AACA,oB;AACA,G;AACA,yB;AACA,qD;AACA,G;AACA,e;AACA,qD;AACA,uB;AACA,yB;AACA,mB;AACA,G;AACA,gB;AACA,uB;AACA,yB;AACA,sC;AACA,oB;AACA,8B;AACA,G;AACA,wB;AACA,kC;AACA,4B;AACA,sC;AACA,G;AACA,iB;AACA,kC;AACA,gC;AACA,G;AACA,iB;AACA,qC;AACA,8C;AACA,mC;AACA,0D;AACA,yD;AACA,0C;AACA,8D;AACA,uC;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC7FA,6B;;AAEA,wB;AACA,+B;AACA,+B;AACA,G;AACA,2B;AACA,2B;AACA,G;AACA,4B;AACA,4B;AACA,E;AACA,C;;;;;;;;;;;;;;;;;;;;;ACXA,sC;AACA,gF;AACA,kB;AACA,8B;AACA,sD;AACA,iB;AACA,8C;AACA,sD;AACA,mB;AACA,kG;AACA,gB;AACA,iB;AACA,+F;AACA,K;AACA,I;;AAEA,8C;AACA,gG;AACA,kB;AACA,iF;AACA,I;;AAEA,+C;AACA,kG;AACA,kB;AACA,8B;AACA,mD;AACA,iB;AACA,2C;AACA,gE;AACA,mB;AACA,6C;AACA,uD;AACA,qB;AACA,gH;AACA,qB;AACA,sD;AACA,8D;AACA,uB;AACA,wD;AACA,2D;AACA,yB;AACA,2C;AACA,oC;AACA,wI;AACA,yB;AACA,sB;AACA,mB;AACA,gB;AACA,iB;AACA,+B;AACA,4B;AACA,6C;AACA,8F;AACA,iB;AACA,K;AACA,I;;AAEA,8C;AACA,gG;AACA,kB;AACA,gC;AACA,uD;AACA,iB;AACA,+B;AACA,mC;AACA,qD;AACA,6D;AACA,iB;AACA,kC;AACA,sD;AACA,iB;AACA,+B;AACA,8C;AACA,oD;AACA,4D;AACA,iB;AACA,O;AACA,I;;;;;;;;;;;;;;;;;;;;AC9EA,gE;AACA,oI;AACA,kB;AACA,8B;AACA,qD;AACA,iB;AACA,kC;AACA,2B;AACA,yG;AACA,O;AACA,6C;AACA,0G;AACA,8D;AACA,gE;AACA,iB;AACA,iB;AACA,kC;AACA,uE;AACA,6C;AACA,yG;AACA,8D;AACA,gE;AACA,iB;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;;ACxBA,sD;AACA,gH;AACA,kB;AACA,kB;AACA,8B;AACA,uB;AACA,qB;AACA,+B;AACA,6B;AACA,2D;AACA,0D;AACA,0C;AACA,+D;AACA,iB;AACA,iC;AACA,uB;AACA,oD;AACA,Q;AACA,oB;AACA,qB;AACA,4B;AACA,c;AACA,kB;AACA,6E;AACA,4B;AACA,mC;AACA,4D;AACA,iB;AACA,kG;AACA,iB;AACA,4C;AACA,iE;AACA,mB;AACA,4G;AACA,mB;AACA,qH;AACA,kB;AACA,sB;AACA,I;;AAEA,6D;AACA,8H;AACA,kB;AACA,gC;AACA,4E;AACA,iB;AACA,uH;AACA,oC;AACA,gE;AACA,iB;AACA,kC;AACA,2C;AACA,8C;AACA,6C;AACA,qG;AACA,iB;AACA,4B;AACA,yC;AACA,8B;AACA,2C;AACA,kG;AACA,Q;AACA,I;;AAEA,uD;AACA,kH;AACA,kB;AACA,kB;AACA,8B;AACA,uB;AACA,qB;AACA,+B;AACA,6B;AACA,2C;AACA,2F;AACA,+B;AACA,sE;AACA,iB;AACA,0D;AACA,yF;AACA,S;AACA,iE;AACA,4B;AACA,2G;AACA,I;;AAEA,0D;AACA,wH;AACA,kB;AACA,gC;AACA,mD;AACA,iB;AACA,6C;AACA,+D;AACA,mB;AACA,gG;AACA,qC;AACA,8D;AACA,mB;AACA,6C;AACA,+D;AACA,qB;AACA,gI;AACA,6G;AACA,mB;AACA,oH;AACA,gB;AACA,K;AACA,I;;AAEA,uE;AACA,kJ;AACA,kB;AACA,mB;AACA,iB;AACA,6H;AACA,sB;AACA,2C;AACA,uG;AACA,mH;AACA,I;;AAEA,8D;AACA,gI;AACA,kB;AACA,8B;AACA,+D;AACA,iB;AACA,4F;AACA,iB;AACA,qH;AACA,mD;AACA,mB;AACA,mG;AACA,6B;AACA,qD;AACA,mC;AACA,oB;AACA,qC;AACA,yD;AACA,mB;AACA,+D;AACA,sG;AACA,oB;AACA,mB;AACA,+D;AACA,sG;AACA,oB;AACA,8C;AACA,wD;AACA,mB;AACA,kC;AACA,iC;AACA,uC;AACA,qE;AACA,qB;AACA,mC;AACA,qC;AACA,8B;AACA,iD;AACA,wG;AACA,uB;AACA,wC;AACA,oE;AACA,qB;AACA,mC;AACA,4B;AACA,+B;AACA,iD;AACA,2G;AACA,uB;AACA,6B;AACA,qC;AACA,yD;AACA,mB;AACA,yG;AACA,gB;AACA,K;AACA,I;;AAEA,4C;AACA,4F;AACA,kB;AACA,mB;AACA,yB;AACA,gG;AACA,+C;AACA,2B;AACA,gC;AACA,kB;AACA,6B;AACA,iF;AACA,M;AACA,2B;AACA,oC;AACA,4E;AACA,uC;AACA,2C;AACA,+E;AACA,8F;AACA,I;;AAEA,qD;AACA,8G;AACA,kB;AACA,sB;AACA,6B;AACA,kD;AACA,2C;AACA,uF;AACA,M;AACA,I;;AAEA,+C;AACA,kG;AACA,kB;AACA,8B;AACA,kD;AACA,iB;AACA,sG;AACA,iG;AACA,mB;AACA,kC;AACA,2B;AACA,0C;AACA,yB;AACA,wB;AACA,4E;AACA,U;AACA,0B;AACA,4E;AACA,U;AACA,qB;AACA,gE;AACA,gF;AACA,8B;AACA,uC;AACA,+F;AACA,mB;AACA,kC;AACA,kC;AACA,uC;AACA,6D;AACA,qB;AACA,kF;AACA,+D;AACA,kC;AACA,gC;AACA,wB;AACA,4E;AACA,S;AACA,wC;AACA,oD;AACA,qB;AACA,yC;AACA,mB;AACA,kD;AACA,0D;AACA,wB;AACA,2C;AACA,mD;AACA,qB;AACA,yC;AACA,6B;AACA,4D;AACA,W;AACA,kD;AACA,0D;AACA,wB;AACA,uC;AACA,uC;AACA,8F;AACA,mB;AACA,oC;AACA,wB;AACA,2C;AACA,6D;AACA,qB;AACA,kF;AACA,+D;AACA,mC;AACA,2C;AACA,mD;AACA,qB;AACA,8D;AACA,wB;AACA,0B;AACA,+I;AACA,Y;AACA,4B;AACA,mG;AACA,Y;AACA,6B;AACA,4D;AACA,W;AACA,uB;AACA,gE;AACA,yD;AACA,0D;AACA,6C;AACA,4H;AACA,uB;AACA,sD;AACA,uB;AACA,+B;AACA,uC;AACA,yD;AACA,mB;AACA,oC;AACA,wB;AACA,4E;AACA,U;AACA,0B;AACA,8D;AACA,U;AACA,iC;AACA,+D;AACA,U;AACA,+B;AACA,mB;AACA,gB;AACA,K;AACA,I;;AAEA,oD;AACA,4G;AACA,kB;AACA,0G;AACA,iD;AACA,iB;AACA,+F;AACA,0B;AACA,yC;AACA,0C;AACA,2C;AACA,wF;AACA,2B;AACA,yC;AACA,8C;AACA,2C;AACA,wF;AACA,Q;AACA,I;;;;;;;;;;;;;;;;;;;;ACtVA,sC;AACA,kB;AACA,gY;AACA,I;AACA,+C;;AAEA,6C;AACA,8F;AACA,kB;AACA,8B;AACA,8D;AACA,iB;AACA,+B;AACA,uB;AACA,8C;AACA,0B;AACA,6B;AACA,2B;AACA,8B;AACA,4B;AACA,6B;AACA,gC;AACA,qB;AACA,uB;AACA,8B;AACA,2B;AACA,qB;AACA,sB;AACA,c;AACA,8B;AACA,4B;AACA,6C;AACA,kF;AACA,0C;AACA,2B;AACA,+B;AACA,wC;AACA,8B;AACA,uB;AACA,+B;AACA,0F;AACA,O;AACA,6D;AACA,8C;AACA,8B;AACA,uB;AACA,+B;AACA,+F;AACA,O;AACA,iI;AACA,6B;AACA,2B;AACA,iC;AACA,+C;AACA,6C;AACA,mF;AACA,kC;AACA,iC;AACA,+C;AACA,0D;AACA,mF;AACA,sK;AACA,K;AACA,I;;AAEA,6C;AACA,8F;AACA,kB;AACA,8B;AACA,8D;AACA,iB;AACA,+B;AACA,uB;AACA,8C;AACA,0B;AACA,6B;AACA,2B;AACA,8B;AACA,4B;AACA,6B;AACA,gC;AACA,qB;AACA,uB;AACA,8B;AACA,2B;AACA,qB;AACA,sB;AACA,c;AACA,8B;AACA,4B;AACA,6C;AACA,kF;AACA,0C;AACA,2B;AACA,+B;AACA,oC;AACA,8B;AACA,uB;AACA,+B;AACA,0F;AACA,O;AACA,6D;AACA,0C;AACA,8B;AACA,uB;AACA,+B;AACA,+F;AACA,O;AACA,iI;AACA,6B;AACA,2B;AACA,iC;AACA,sD;AACA,6C;AACA,mF;AACA,kC;AACA,iC;AACA,+C;AACA,0D;AACA,mF;AACA,sK;AACA,K;AACA,I;;AAEA,iD;AACA,sG;AACA,kB;AACA,8B;AACA,kD;AACA,iB;AACA,+B;AACA,uB;AACA,sD;AACA,0B;AACA,6B;AACA,2B;AACA,8B;AACA,4B;AACA,2B;AACA,wE;AACA,yF;AACA,2C;AACA,6B;AACA,gC;AACA,8C;AACA,yC;AACA,6B;AACA,6C;AACA,wF;AACA,2D;AACA,K;AACA,I;;AAEA,qD;AACA,8G;AACA,kB;AACA,8B;AACA,kD;AACA,iB;AACA,8B;AACA,uB;AACA,gD;AACA,0B;AACA,6B;AACA,4B;AACA,8B;AACA,8B;AACA,6B;AACA,+B;AACA,4B;AACA,kE;AACA,2B;AACA,gC;AACA,2C;AACA,yD;AACA,6R;AACA,gB;AACA,qC;AACA,uC;AACA,gB;AACA,qC;AACA,sE;AACA,gE;AACA,mB;AACA,0G;AACA,2B;AACA,oG;AACA,S;AACA,gD;AACA,wD;AACA,iG;AACA,wB;AACA,oG;AACA,U;AACA,oB;AACA,wE;AACA,qE;AACA,4B;AACA,sH;AACA,qB;AACA,c;AACA,oB;AACA,2D;AACA,oB;AACA,yB;AACA,yB;AACA,oB;AACA,sC;AACA,6D;AACA,8G;AACA,qB;AACA,c;AACA,oB;AACA,8D;AACA,oB;AACA,yB;AACA,uB;AACA,sC;AACA,gE;AACA,4F;AACA,+G;AACA,sB;AACA,2G;AACA,yC;AACA,gC;AACA,mF;AACA,+E;AACA,2B;AACA,8F;AACA,6D;AACA,uB;AACA,yC;AACA,a;AACA,Q;AACA,6D;AACA,0G;AACA,K;AACA,I;;AAEA,oD;AACA,4G;AACA,kB;AACA,8B;AACA,kD;AACA,iB;AACA,+B;AACA,0D;AACA,wC;AACA,oG;AACA,8B;AACA,0C;AACA,6C;AACA,2F;AACA,0B;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;AChQA,c;AACA,mB;AACA,oB;;AAEA,2E;AACA,iB;AACA,yB;AACA,yB;AACA,sB;;AAEA,iB;AACA,gB;;AAEA,2C;AACA,uB;AACA,uB;AACA,sB;;AAEA,uC;AACA,2C;AACA,2C;AACA,G;;AAEA,mC;AACA,oC;AACA,iE;AACA,G;AACA,G;;AAEA,yC;;AAEA,mF;AACA,kC;AACA,6B;AACA,oB;AACA,yD;AACA,qH;AACA,I;;AAEA,yB;AACA,I;;AAEA,8B;AACA,wC;AACA,I;;AAEA,sB;AACA,oB;AACA,wC;AACA,I;;AAEA,8B;AACA,mC;AACA,2C;AACA,2C;AACA,wC;AACA,sC;AACA,wB;AACA,I;;AAEA,kC;AACA,mC;AACA,qC;AACA,+B;AACA,I;;AAEA,mC;AACA,sC;AACA,kC;AACA,+B;AACA,I;;AAEA,mE;AACA,uC;AACA,2C;AACA,qC;AACA,kC;AACA,I;;AAEA,mE;AACA,6D;AACA,iC;AACA,I;AACA,oE;AACA,yD;AACA,oE;AACA,e;AACA,qC;AACA,uC;AACA,sC;AACA,I;AACA,I;;AAEA,8B;AACA,mC;AACA,kC;AACA,I;;AAEA,qC;AACA,wD;AACA,4D;AACA,6D;AACA,yB;AACA,uD;AACA,U;AACA,G;AACA,G;AACA,M;;;;;;;;;;;;;;;;;;;;AC3GA,a;AACA,8B;AACA,8B;AACA,E;;AAEA,mB;AACA,yD;;AAEA,+C;AACA,gC;AACA,I;;AAEA,2C;AACA,gC;AACA,6C;AACA,kC;AACA,wC;AACA,oE;AACA,gD;AACA,K;AACA,M;AACA,G;AACA,I;;AAEA,G;AACA,iC;AACA,G;AACA,0C;AACA,wB;AACA,4C;AACA,I;AACA,wB;AACA,oD;AACA,I;AACA,6B;AACA,4D;AACA,8B;AACA,oB;AACA,mF;AACA,I;AACA,sB;AACA,I;AACA,mC;AACA,6C;AACA,G;AACA,I;;;;AAIA,G;AACA,iC;AACA,G;;AAEA,iE;AACA,W;AACA,yC;AACA,wB;AACA,4C;AACA,I;AACA,2B;AACA,+C;AACA,G;AACA,G;;;;AAIA,G;AACA,gC;AACA,G;;AAEA,yC;AACA,4B;AACA,kD;AACA,I;AACA,2B;AACA,iD;AACA,G;AACA,I;;;;AAIA,G;AACA,W;AACA,G;;AAEA,kD;AACA,2B;AACA,a;AACA,a;AACA,G;;AAEA,yC;AACA,4B;AACA,G;AACA,qB;AACA,wB;AACA,G;AACA,+D;AACA,iC;AACA,G;;AAEA,Y;AACA,G;;AAEA,uD;AACA,mC;AACA,gF;;AAEA,+D;AACA,wD;AACA,mB;AACA,kB;;AAEA,oD;AACA,iC;AACA,6B;AACA,G;;AAEA,yC;AACA,W;AACA,c;AACA,K;AACA,K;AACA,G;;AAEA,yD;AACA,wC;AACA,G;;AAEA,+C;AACA,2F;AACA,G;;AAEA,mE;AACA,G;AACA,gE;AACA,uB;AACA,+D;AACA,6B;AACA,e;AACA,U;AACA,4E;AACA,gB;AACA,G;AACA,G;AACA,yD;AACA,6F;AACA,e;AACA,G;;AAEA,uK;;AAEA,uB;AACA,e;AACA,U;AACA,wE;AACA,gB;AACA,G;AACA,G;AACA,8E;AACA,6B;AACA,sD;AACA,+E;AACA,iB;AACA,I;AACA,e;AACA,U;AACA,4E;AACA,gB;AACA,G;AACA,G;;AAEA,+C;AACA,W;AACA,G;;AAEA,K;;;;;;;;;;;;;;;;;;;;AChLA,a;AACA,mB;AACA,yD;;AAEA,0D;AACA,qC;AACA,+B;AACA,uC;AACA,iC;AACA,e;AACA,yC;AACA,6D;AACA,kB;AACA,qD;AACA,uD;AACA,Y;AACA,qE;AACA,K;AACA,K;;AAEA,6D;AACA,wC;AACA,gD;AACA,wE;AACA,8D;AACA,8D;;AAEA,4D;AACA,8D;AACA,yF;AACA,+D;AACA,2F;AACA,+D;AACA,2F;;AAEA,uC;AACA,G;AACA,I;;AAEA,2D;AACA,0B;AACA,wD;AACA,sB;AACA,M;AACA,I;AACA,+B;AACA,+B;AACA,wE;AACA,oB;AACA,W;AACA,iC;AACA,I;AACA,G;AACA,I;;;AAGA,+E;AACA,iC;AACA,yC;AACA,oD;AACA,G;AACA,K;;;;;;;;;;;;;;;;;;;;AC7DA,a;;AAEA,mB;AACA,yD;;AAEA,2D;AACA,gC;AACA,gC;AACA,6F;AACA,2B;AACA,I;AACA,wE;AACA,2B;AACA,oD;AACA,kB;AACA,I;AACA,oC;AACA,uC;AACA,I;AACA,6C;AACA,2B;AACA,2C;AACA,G;AACA,I;;AAEA,qD;AACA,mB;AACA,e;AACA,G;;AAEA,G;AACA,qD;AACA,G;;AAEA,gD;AACA,gE;AACA,2B;AACA,uC;AACA,yD;AACA,kB;AACA,G;AACA,I;;AAEA,iD;AACA,2B;AACA,+C;AACA,I;;AAEA,oC;AACA,0D;AACA,I;;AAEA,iC;AACA,uD;AACA,I;;AAEA,+B;AACA,qD;AACA,G;AACA,I;;;AAGA,wD;AACA,qC;AACA,4E;AACA,6E;AACA,mF;AACA,K;AACA,4E;AACA,4B;AACA,qF;AACA,I;AACA,iD;AACA,gF;AACA,G;AACA,I;;;AAGA,G;AACA,sD;AACA,G;;AAEA,oD;AACA,oD;AACA,2B;AACA,mB;AACA,I;;AAEA,sD;AACA,2B;AACA,6B;AACA,qB;AACA,I;AACA,I;;AAEA,2D;AACA,2B;AACA,oB;AACA,I;;AAEA,yC;AACA,2B;AACA,uC;;AAEA,gE;AACA,4D;AACA,sD;AACA,4E;AACA,yE;AACA,qD;;AAEA,iD;AACA,0D;;AAEA,6E;AACA,kB;;AAEA,iD;AACA,0B;AACA,+D;AACA,8B;AACA,yD;AACA,wC;AACA,6C;AACA,uE;AACA,Y;AACA,oE;AACA,K;AACA,I;AACA,I;AACA,kD;AACA,2B;AACA,uC;;AAEA,gE;AACA,sD;AACA,4E;;AAEA,kD;AACA,yD;;AAEA,6E;AACA,kB;AACA,sB;;AAEA,iD;AACA,uB;AACA,mE;AACA,wC;AACA,6C;AACA,8E;AACA,K;AACA,I;AACA,I;AACA,gD;AACA,2B;AACA,uC;;AAEA,4D;AACA,yI;;AAEA,kD;AACA,0D;;AAEA,6E;AACA,kB;;AAEA,kD;AACA,+D;AACA,I;AACA,+C;AACA,yD;AACA,I;AACA,yE;AACA,2D;AACA,iF;AACA,I;AACA,I;AACA,mK;AACA,6B;AACA,oB;AACA,I;AACA,G;AACA,I;;AAEA,kD;AACA,4C;AACA,0D;AACA,K;AACA,K;;AAEA,qD;AACA,mE;AACA,iC;AACA,4B;AACA,iB;AACA,W;AACA,kD;AACA,wC;AACA,iE;AACA,yC;AACA,Y;AACA,iC;AACA,K;AACA,I;AACA,I;;AAEA,+B;AACA,qD;AACA,I;;AAEA,wB;AACA,oD;AACA,I;;AAEA,iC;AACA,mC;AACA,I;;AAEA,gC;AACA,+D;AACA,I;;AAEA,kC;AACA,sD;AACA,G;AACA,I;;;AAGA,yD;AACA,sB;AACA,uB;AACA,mC;AACA,oD;AACA,yB;AACA,uB;AACA,0F;AACA,2C;AACA,K;AACA,O;AACA,0B;AACA,6C;AACA,yB;AACA,oE;AACA,K;AACA,O;AACA,uB;AACA,0C;AACA,uB;AACA,yB;AACA,iE;AACA,K;AACA,O;AACA,0B;AACA,6C;AACA,0B;AACA,yB;AACA,iB;AACA,K;AACA,M;;AAEA,wB;AACA,0B;AACA,8C;AACA,yB;AACA,uB;AACA,2G;AACA,2C;AACA,K;AACA,O;AACA,uB;AACA,2C;AACA,uB;AACA,yB;AACA,uB;AACA,yE;AACA,2C;AACA,K;AACA,O;AACA,uB;AACA,8C;AACA,uB;AACA,yB;AACA,kF;AACA,K;AACA,O;AACA,0B;AACA,8C;AACA,0B;AACA,yB;AACA,iB;AACA,K;AACA,O;AACA,gC;AACA,mD;AACA,0B;AACA,yB;AACA,4D;AACA,iE;AACA,mC;AACA,uB;AACA,qF;AACA,2C;AACA,K;AACA,M;;AAEA,8E;;AAEA,+E;AACA,I;;AAEA,oC;AACA,0D;AACA,I;;AAEA,2B;AACA,uG;AACA,I;;AAEA,4B;AACA,kD;AACA,I;;AAEA,sC;AACA,qB;AACA,sG;AACA,yC;AACA,I;;AAEA,qC;AACA,yD;AACA,G;AACA,I;;AAEA,0C;AACA,0B;AACA,oB;AACA,I;AACA,yB;AACA,mC;AACA,I;AACA,kC;AACA,8E;AACA,S;AACA,I;;AAEA,G;AACA,uC;AACA,G;AACA,8C;AACA,6G;AACA,6B;AACA,qB;AACA,I;AACA,I;AACA,8D;AACA,2B;AACA,oB;AACA,I;AACA,kE;AACA,2B;AACA,uC;AACA,oE;AACA,kB;AACA,G;AACA,I;;AAEA,+C;AACA,sB;AACA,Y;AACA,8B;AACA,6D;AACA,0B;AACA,yB;AACA,iB;AACA,K;AACA,O;AACA,0B;AACA,yD;AACA,0B;AACA,yB;AACA,iB;AACA,K;AACA,O;AACA,gC;AACA,8D;AACA,0B;AACA,yB;AACA,4D;AACA,iE;AACA,mC;AACA,uB;AACA,uD;AACA,2C;AACA,K;AACA,M;AACA,G;AACA,I;;AAEA,G;AACA,W;AACA,G;;AAEA,sC;AACA,4C;AACA,gB;AACA,e;AACA,U;AACA,wB;AACA,G;AACA,G;;AAEA,uE;AACA,qB;AACA,6B;AACA,sF;AACA,mC;AACA,2B;AACA,I;AACA,K;AACA,iB;AACA,I;;AAEA,iD;AACA,4C;AACA,yB;AACA,I;;AAEA,6C;AACA,4C;AACA,gB;AACA,e;AACA,U;AACA,2D;AACA,G;AACA,G;;AAEA,iC;AACA,+C;AACA,Y;AACA,U;AACA,W;AACA,G;AACA,G;;AAEA,yB;AACA,sC;;AAEA,2D;AACA,gE;AACA,qC;AACA,G;AACA,qD;AACA,0D;AACA,+B;AACA,G;AACA,2E;AACA,mH;AACA,mD;AACA,G;;AAEA,wE;AACA,oD;AACA,gE;AACA,qC;AACA,G;;AAEA,oB;AACA,0B;AACA,2D;AACA,W;AACA,W;AACA,qB;AACA,uB;AACA,M;AACA,I;AACA,8B;AACA,qD;AACA,W;AACA,W;AACA,qB;AACA,iB;AACA,M;AACA,I;AACA,wC;AACA,qF;AACA,4D;AACA,kE;AACA,W;AACA,W;AACA,oC;AACA,I;AACA,U;AACA,+E;AACA,G;;AAEA,6E;AACA,e;AACA,0C;AACA,yE;AACA,qD;AACA,8E;AACA,Y;AACA,uE;AACA,K;AACA,W;AACA,wC;AACA,I;AACA,K;AACA,G;;AAEA,kC;AACA,gD;AACA,E;;AAEA,8B;AACA,yB;AACA,mD;AACA,Q;AACA,G;;AAEA,0B;AACA,sC;;AAEA,wC;AACA,mB;AACA,yE;AACA,2D;AACA,qD;AACA,G;;AAEA,2D;AACA,gE;AACA,qC;AACA,G;AACA,0B;AACA,2D;AACA,W;AACA,W;AACA,gC;AACA,I;AACA,G;;AAEA,qD;AACA,0D;AACA,+B;AACA,G;AACA,uB;AACA,qD;AACA,W;AACA,W;AACA,0B;AACA,I;AACA,G;;AAEA,wE;AACA,oD;AACA,gE;AACA,qC;AACA,G;AACA,0D;AACA,U;AACA,U;AACA,+B;AACA,G;;AAEA,sC;AACA,U;AACA,G;;AAEA,+B;AACA,kE;AACA,4C;AACA,wB;AACA,G;;AAEA,0E;AACA,8C;AACA,4D;AACA,I;;AAEA,uC;AACA,+D;AACA,yE;AACA,6B;AACA,2C;;AAEA,8C;AACA,8F;AACA,wD;AACA,oF;AACA,oB;AACA,0E;AACA,a;;AAEA,8C;AACA,+C;AACA,6E;AACA,uC;AACA,a;AACA,+C;AACA,M;AACA,Y;AACA,qC;AACA,K;AACA,W;AACA,6C;AACA,I;AACA,K;;AAEA,gC;AACA,U;AACA,G;;AAEA,gD;AACA,e;AACA,6C;AACA,6E;AACA,Y;AACA,uE;AACA,K;AACA,W;AACA,wC;AACA,I;AACA,K;AACA,G;;AAEA,kC;AACA,sC;;AAEA,+D;AACA,kC;AACA,4B;AACA,gB;AACA,uB;AACA,gB;AACA,2C;AACA,0E;AACA,a;AACA,wE;AACA,M;AACA,Y;AACA,qE;AACA,K;AACA,M;AACA,U;AACA,6E;AACA,G;AACA,G;AACA,kC;AACA,sC;AACA,wE;AACA,2D;AACA,wE;AACA,oD;;AAEA,gC;AACA,gF;AACA,U;AACA,G;;AAEA,0D;AACA,U;AACA,G;;AAEA,sC;AACA,U;AACA,G;;AAEA,kE;AACA,e;AACA,8C;AACA,8E;AACA,Y;AACA,uE;AACA,K;AACA,W;AACA,0E;;AAEA,0C;AACA,kC;AACA,yC;AACA,a;AACA,I;AACA,K;AACA,G;;AAEA,+C;AACA,wE;AACA,+D;AACA,+B;AACA,yE;AACA,qD;AACA,oC;AACA,+E;AACA,iB;AACA,I;AACA,G;AACA,c;AACA,G;AACA,K;;;;;;;;;;;;;;;;;;;AC5rBA,a;AACA,mB;AACA,yD;;;AAGA,G;AACA,4D;AACA,qE;AACA,oE;AACA,+C;AACA,G;;AAEA,oC;AACA,8E;AACA,E;;AAEA,oC;AACA,8E;AACA,E;;AAEA,oE;AACA,oE;AACA,kE;AACA,4B;AACA,mC;AACA,qE;AACA,gC;AACA,gB;AACA,wD;AACA,K;AACA,gD;AACA,M;AACA,G;AACA,I;;AAEA,G;AACA,gC;AACA,G;;AAEA,uC;AACA,iE;AACA,2B;AACA,mB;AACA,I;AACA,4D;AACA,6B;AACA,oB;AACA,I;AACA,I;AACA,iE;AACA,2B;AACA,uD;AACA,+B;AACA,0D;AACA,G;AACA,I;;AAEA,iC;AACA,sC;AACA,iF;AACA,wF;AACA,2E;AACA,U;AACA,G;;AAEA,yB;AACA,8D;AACA,oB;AACA,gB;AACA,uE;AACA,Y;AACA,yD;AACA,iC;AACA,4D;AACA,K;AACA,M;AACA,G;;AAEA,wC;AACA,mC;AACA,wD;AACA,G;AACA,I;;AAEA,sD;AACA,mE;AACA,oC;AACA,wF;AACA,U;AACA,kB;AACA,G;AACA,G;;AAEA,G;AACA,gC;AACA,G;;AAEA,uC;AACA,4D;AACA,mB;AACA,I;AACA,wD;AACA,6B;AACA,oB;AACA,I;AACA,I;AACA,mE;AACA,uD;AACA,+B;AACA,wB;AACA,G;AACA,I;;AAEA,iC;AACA,sC;AACA,0E;AACA,oF;AACA,wE;AACA,U;AACA,G;;AAEA,yB;AACA,2D;AACA,oB;AACA,gB;AACA,uE;AACA,Y;AACA,yD;AACA,iC;AACA,0B;AACA,K;AACA,M;AACA,G;;AAEA,wC;AACA,mC;AACA,wD;AACA,G;AACA,I;;AAEA,sD;AACA,+D;AACA,oC;AACA,wF;AACA,U;AACA,kB;AACA,G;AACA,G;;AAEA,G;AACA,oC;AACA,G;;AAEA,2C;AACA,qD;AACA,uD;AACA,G;AACA,I;;AAEA,4C;AACA,uB;AACA,sD;AACA,2B;AACA,6D;AACA,W;AACA,I;AACA,uD;AACA,G;AACA,I;;;AAGA,G;AACA,uC;AACA,G;;AAEA,gE;AACA,yE;AACA,wC;AACA,4F;AACA,c;AACA,sB;AACA,O;AACA,K;;AAEA,8C;AACA,uD;AACA,uC;AACA,G;AACA,I;;AAEA,+C;AACA,uB;AACA,sG;AACA,2D;AACA,G;AACA,I;;;AAGA,G;AACA,wC;AACA,G;;AAEA,+C;AACA,oE;AACA,2B;AACA,wE;AACA,4D;AACA,I;AACA,0E;AACA,uE;AACA,0E;AACA,gE;AACA,wF;AACA,yB;AACA,yB;AACA,M;AACA,mD;AACA,6D;AACA,+D;AACA,0C;AACA,O;;AAEA,8B;AACA,yE;AACA,W;;AAEA,mC;AACA,iF;AACA,gB;AACA,6E;AACA,a;AACA,2E;AACA,M;AACA,8D;AACA,O;AACA,I;AACA,I;AACA,6E;AACA,6E;AACA,wE;AACA,yC;AACA,kE;AACA,oE;AACA,wE;AACA,yB;AACA,I;AACA,G;AACA,I;;AAEA,oE;AACA,8D;AACA,6D;AACA,sC;AACA,oE;AACA,kC;AACA,qE;AACA,K;;AAEA,oF;AACA,G;;AAEA,kE;AACA,uD;AACA,iE;AACA,sF;AACA,8E;AACA,G;;AAEA,uC;AACA,iE;AACA,2B;AACA,G;;AAEA,gD;AACA,mC;AACA,gC;AACA,I;;AAEA,uB;AACA,wE;AACA,I;;AAEA,kC;AACA,sC;AACA,0D;AACA,I;;AAEA,4B;AACA,6E;AACA,G;AACA,I;;;AAGA,E;;;;AAIA,+E;AACA,iC;AACA,uC;AACA,oD;AACA,G;;AAEA,K","file":"/packages/ian_accounts-ui-bootstrap-3.js","sourcesContent":["if (!Accounts.ui){\n\tAccounts.ui = {};\n}\n\nif (!Accounts.ui._options) {\n\tAccounts.ui._options = {\n\t\textraSignupFields: [],\n\t\trequestPermissions: {},\n\t\trequestOfflineToken: {},\n\t\tforceApprovalPrompt: {},\n\t\tforceEmailLowercase: false,\n\t\tforceUsernameLowercase: false,\n\t\tforcePasswordLowercase: false\n\t};\n}\n\nAccounts.ui.navigate = function (route, hash) {\n\t// if router is iron-router\n\tif (window.Router && _.isFunction(Router.go)) {\n\t\tRouter.go(route, hash);\n\t}\n}\n\nAccounts.ui.config = function(options) {\n\t// validate options keys\n\tvar VALID_KEYS = ['passwordSignupFields', 'extraSignupFields', 'forceEmailLowercase', 'forceUsernameLowercase','forcePasswordLowercase',\n\t\t\t\t\t  'requestPermissions', 'requestOfflineToken', 'forceApprovalPrompt'];\n\n\t_.each(_.keys(options), function(key) {\n\t\tif (!_.contains(VALID_KEYS, key)){\n\t\t\tthrow new Error(\"Accounts.ui.config: Invalid key: \" + key);\n\t\t}\n\t});\n\t\n\toptions.extraSignupFields = options.extraSignupFields || [];\n\t\n\t// deal with `passwordSignupFields`\n\tif (options.passwordSignupFields) {\n\t\tif (_.contains([\n\t\t\t\"USERNAME_AND_EMAIL_CONFIRM\",\n\t\t\t\"USERNAME_AND_EMAIL\",\n\t\t\t\"USERNAME_AND_OPTIONAL_EMAIL\",\n\t\t\t\"USERNAME_ONLY\",\n\t\t\t\"EMAIL_ONLY\"\n\t\t], options.passwordSignupFields)) {\n\t\t\tif (Accounts.ui._options.passwordSignupFields){\n\t\t\t\tthrow new Error(\"Accounts.ui.config: Can't set `passwordSignupFields` more than once\");\n\t\t\t} else {\n\t\t\t\tAccounts.ui._options.passwordSignupFields = options.passwordSignupFields;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Accounts.ui.config: Invalid option for `passwordSignupFields`: \" + options.passwordSignupFields);\n\t\t}\n\t}\n\n\tAccounts.ui._options.forceEmailLowercase = options.forceEmailLowercase;\n\tAccounts.ui._options.forceUsernameLowercase = options.forceUsernameLowercase;\n\tAccounts.ui._options.forcePasswordLowercase = options.forcePasswordLowercase;\n\n\t// deal with `requestPermissions`\n\tif (options.requestPermissions) {\n\t\t_.each(options.requestPermissions, function(scope, service) {\n\t\t\tif (Accounts.ui._options.requestPermissions[service]) {\n\t\t\t\tthrow new Error(\"Accounts.ui.config: Can't set `requestPermissions` more than once for \" + service);\n\t\t\t} else if (!(scope instanceof Array)) {\n\t\t\t\tthrow new Error(\"Accounts.ui.config: Value for `requestPermissions` must be an array\");\n\t\t\t} else {\n\t\t\t\tAccounts.ui._options.requestPermissions[service] = scope;\n\t\t\t}\n\t\t});\n\t}\n\tif (typeof options.extraSignupFields !== 'object' || !options.extraSignupFields instanceof Array) {\n\t\tthrow new Error(\"Accounts.ui.config: `extraSignupFields` must be an array.\");\n\t} else {\n\t\tif (options.extraSignupFields) {\n\t\t\t_.each(options.extraSignupFields, function(field, index) {\n\t\t\t\tif (!field.fieldName || !field.fieldLabel){\n\t\t\t\t\tthrow new Error(\"Accounts.ui.config: `extraSignupFields` objects must have `fieldName` and `fieldLabel` attributes.\");\n\t\t\t\t}\n\t\t\t\tif (typeof field.visible === 'undefined'){\n\t\t\t\t\tfield.visible = true;\n\t\t\t\t}\n\t\t\t\tAccounts.ui._options.extraSignupFields[index] = field;\n\t\t\t});\n\t\t}\n\t}\n\n\t// deal with `requestOfflineToken`\n\tif (options.requestOfflineToken) {\n\t\t_.each(options.requestOfflineToken, function (value, service) {\n\t\t\tif (service !== 'google'){\n\t\t\t\tthrow new Error(\"Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.\");\n\t\t\t}\n\t\t\tif (Accounts.ui._options.requestOfflineToken[service]) {\n\t\t\t\tthrow new Error(\"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \" + service);\n\t\t\t} else {\n\t\t\t\tAccounts.ui._options.requestOfflineToken[service] = value;\n\t\t\t}\n\t\t});\n\t}\n\n\t// deal with `forceApprovalPrompt`\n\tif (options.forceApprovalPrompt) {\n\t\t_.each(options.forceApprovalPrompt, function (value, service) {\n\t\t\tif (service !== 'google'){\n\t\t\t\tthrow new Error(\"Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.\");\n\t\t\t}\n\t\t\tif (Accounts.ui._options.forceApprovalPrompt[service]) {\n\t\t\t\tthrow new Error(\"Accounts.ui.config: Can't set `forceApprovalPrompt` more than once for \" + service);\n\t\t\t} else {\n\t\t\t\tAccounts.ui._options.forceApprovalPrompt[service] = value;\n\t\t\t}\n\t\t});\n\t}\n};\n\nAccounts.ui._passwordSignupFields = function() {\n\treturn Accounts.ui._options.passwordSignupFields || \"EMAIL_ONLY\";\n};\n\n","i18n.map(\"en\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Reset your password\",\n\t\tnewPassword: \"New password\",\n\t\tnewPasswordAgain: \"New Password (again)\",\n\t\tcancel: \"Cancel\",\n\t\tsubmit: \"Set password\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Choose a password\",\n\t\tnewPassword: \"New password\",\n\t\tnewPasswordAgain: \"New Password (again)\",\n\t\tcancel: \"Close\",\n\t\tsubmit: \"Set password\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Email address verified\",\n\t\tdismiss: \"Dismiss\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Dismiss\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Change password\",\n\t\tsignOut: \"Sign out\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Sign in\",\n\t\tup: \"Join\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"or\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Create\",\n\t\tsignIn: \"Sign in\",\n\t\tforgot: \"Forgot password?\",\n\t\tcreateAcc: \"Create account\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Email\",\n\t\treset: \"Reset password\",\n\t\tinvalidEmail: \"Invalid email\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Cancel\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Change password\",\n\t\tcancel: \"Cancel\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Sign in with\",\n\t\tconfigure: \"Configure\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Sign out\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"No login services configured\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Username or Email\",\n\t\tusername: \"Username\",\n\t\temail: \"Email\",\n\t\tpassword: \"Password\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Username\",\n\t\temail: \"Email\",\n\t\temailOpt: \"Email (optional)\",\n\t\tpassword: \"Password\",\n\t\tpasswordAgain: \"Password (again)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Current Password\",\n\t\tnewPassword: \"New Password\",\n\t\tnewPasswordAgain: \"New Password (again)\"\n\t},\n\tinfoMessages : {\n\t\temailSent: \"Email sent\",\n\t\tpasswordChanged: \"Password changed\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"User not found\",\n\t\tinvalidEmail: \"Invalid email\",\n\t\tincorrectPassword: \"Incorrect password\",\n\t\tusernameTooShort: \"Username must be at least 3 characters long\",\n\t\tpasswordTooShort: \"Password must be at least 6 characters long\",\n\t\tpasswordsDontMatch: \"Passwords don't match\",\n\t\tnewPasswordSameAsOld: \"New and old passwords must be different\",\n\t\tsignupsForbidden: \"Signups forbidden\"\n\t}\n});\n","i18n.map(\"es\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Restablece tu contraseña\",\n\t\tnewPassword: \"Nueva contraseña\",\n\t\tnewPasswordAgain: \"Nueva contraseña (otra vez)\",\n\t\tcancel: \"Cancelar\",\n\t\tsubmit: \"Guardar\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Escribe una contraseña\",\n\t\tnewPassword: \"Nueva contraseña\",\n\t\tnewPasswordAgain: \"Nueva contraseña (otra vez)\",\n\t\tcancel: \"Cerrar\",\n\t\tsubmit: \"Guardar contraseña\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Correo electrónico verificado\",\n\t\tdismiss: \"Cerrar\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Cerrar\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Cambiar contraseña\",\n\t\tsignOut: \"Cerrar sesión\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Iniciar sesión\",\n\t\tup: \"registrarse\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"o\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Crear\",\n\t\tsignIn: \"Iniciar sesión\",\n\t\tforgot: \"¿Ha olvidado su contraseña?\",\n\t\tcreateAcc: \"Registrarse\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Correo electrónico\",\n\t\treset: \"Restablecer contraseña\",\n\t\tinvalidEmail: \"Correo electrónico inválido\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Cancelar\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Cambiar contraseña\",\n\t\tcancel: \"Cancelar\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Inicia sesión con\",\n\t\tconfigure: \"Configurar\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Cerrar sesión\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"No hay ningún servicio configurado\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Usuario o correo electrónico\",\n\t\tusername: \"Usuario\",\n\t\temail: \"Correo electrónico\",\n\t\tpassword: \"Contraseña\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Usuario\",\n\t\temail: \"Correo electrónico\",\n\t\temailOpt: \"Correo elect. (opcional)\",\n\t\tpassword: \"Contraseña\",\n\t\tpasswordAgain: \"Contraseña (otra vez)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Contraseña Actual\",\n\t\tnewPassword: \"Nueva Contraseña\",\n\t\tnewPasswordAgain: \"Nueva Contraseña (otra vez)\"\n\t},\n\tinfoMessages: {\n\t\tsent: \"Email enviado\",\n\t\tpasswordChanged: \"Contraseña modificada\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"El usuario no existe\",\n\t\tinvalidEmail: \"Correo electrónico inválido\",\n\t\tincorrectPassword: \"Contraseña incorrecta\",\n\t\tusernameTooShort: \"El nombre de usuario tiene que tener 3 caracteres como mínimo\",\n\t\tpasswordTooShort: \"La contraseña tiene que tener 6 caracteres como mínimo\",\n\t\tpasswordsDontMatch: \"Las contraseñas no son iguales\",\n\t\tnewPasswordSameAsOld: \"La contraseña nueva y la actual no pueden ser iguales\"\n\t}\n});\n","i18n.map(\"ca\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Restablir la contrasenya\",\n\t\tnewPassword: \"Nova contrasenya\",\n\t\tnewPasswordAgain: \"Nova contrasenya (un altre cop)\",\n\t\tcancel: \"Cancel·lar\",\n\t\tsubmit: \"Guardar\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Escriu una contrasenya\",\n\t\tnewPassword: \"Nova contrasenya\",\n\t\tnewPasswordAgain: \"Nova contrasenya (un altre cop)\",\n\t\tcancel: \"Tancar\",\n\t\tsubmit: \"Guardar contrasenya\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Adreça electrònica verificada\",\n\t\tdismiss: \"Tancar\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Tancar\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Canviar contrasenya\",\n\t\tsignOut: \"Tancar sessió\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Iniciar sessió\",\n\t\tup: \"Registrar-se\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"o bé\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Crear\",\n\t\tsignIn: \"Iniciar sessió\",\n\t\tforgot: \"Ha oblidat la contrasenya?\",\n\t\tcreateAcc: \"Registrar-se\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Adreça electrònica\",\n\t\treset: \"Restablir contrasenya\",\n\t\tinvalidEmail: \"Adreça invàlida\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Cancel·lar\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Canviar contrasenya\",\n\t\tcancel: \"Cancel·lar\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Inicia sessió amb\",\n\t\tconfigure: \"Configurar\"\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Tancar sessió\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"No hi ha cap servei configurat\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Usuari o correu electrònic\",\n\t\tusername: \"Usuari\",\n\t\temail: \"Adreça electrònica\",\n\t\tpassword: \"Contrasenya\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Usuari\",\n\t\temail: \"Adreça electrònica\",\n\t\temailOpt: \"Adreça elect. (opcional)\",\n\t\tpassword: \"Contrasenya\",\n\t\tpasswordAgain: \"Contrasenya (un altre cop)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Contrasenya Actual\",\n\t\tnewPassword: \"Nova Contrasenya\",\n\t\tnewPasswordAgain: \"Nova Contrasenya (un altre cop)\"\n\t},\n\tinfoMessages: {\n\t\tsent: \"Email enviat\",\n\t\tpasswordChanged: \"Contrasenya canviada\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"L'usuari no existeix\",\n\t\tinvalidEmail: \"Adreça invàlida\",\n\t\tincorrectPassword: \"Contrasenya incorrecta\",\n\t\tusernameTooShort: \"El nom d'usuari ha de tenir 3 caracters com a mínim\",\n\t\tpasswordTooShort: \"La contrasenya ha de tenir 6 caracters como a mínim\",\n\t\tpasswordsDontMatch: \"Les contrasenyes no són iguals\",\n\t\tnewPasswordSameAsOld: \"La contrasenya nova i l'actual no poden ser iguals\"\n\t}\n});\n","i18n.map(\"fr\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Réinitialiser mon mot de passe\",\n\t\tnewPassword: \"Nouveau mot de passe\",\n\t\tnewPasswordAgain: \"Nouveau mot de passe (confirmation)\",\n\t\tcancel: \"Annuler\",\n\t\tsubmit: \"Définir le mot de passe\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Choisir un mot de passe\",\n\t\tnewPassword: \"Nouveau mot de passe\",\n\t\tnewPasswordAgain: \"Nouveau mot de passe (confirmation)\",\n\t\tcancel: \"Fermer\",\n\t\tsubmit: \"Définir le mot de passe\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"L'adresse email a été vérifiée\",\n\t\tdismiss: \"Fermer\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Fermer\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Changer le mot de passe\",\n\t\tsignOut: \"Déconnexion\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Connexion\",\n\t\tup: \"Inscription\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"ou\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Créer\",\n\t\tsignIn: \"Connexion\",\n\t\tforgot: \"Mot de passe oublié ?\",\n\t\tcreateAcc: \"Inscription\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Email\",\n\t\treset: \"Réinitialiser le mot de passe\",\n\t\tinvalidEmail: \"L'adresse email est invalide\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Annuler\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Changer le mot de passe\",\n\t\tcancel: \"Annuler\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Se connecter avec\",\n\t\tconfigure: \"Configurer\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Déconnexion\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Aucun service d'authentification n'est configuré\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Nom d'utilisateur ou email\",\n\t\tusername: \"Nom d'utilisateur\",\n\t\temail: \"Email\",\n\t\tpassword: \"Mot de passe\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Nom d'utilisateur\",\n\t\temail: \"Email\",\n\t\temailOpt: \"Email (optionnel)\",\n\t\tpassword: \"Mot de passe\",\n\t\tpasswordAgain: \"Mot de passe (confirmation)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Mot de passe actuel\",\n\t\tnewPassword: \"Nouveau mot de passe\",\n\t\tnewPasswordAgain: \"Nouveau mot de passe (confirmation)\"\n\t},\n\tinfoMessages: {\n\t\tsent: \"Email envoyé\",\n\t\tpasswordChanged: \"Mot de passe modifié\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"Utilisateur non trouvé\",\n\t\tinvalidEmail: \"L'adresse email est invalide\",\n\t\tincorrectPassword: \"Mot de passe incorrect\",\n\t\tusernameTooShort: \"Le nom d'utilisateur doit comporter au moins 3 caractères\",\n\t\tpasswordTooShort: \"Le mot de passe doit comporter au moins 6 caractères\",\n\t\tpasswordsDontMatch: \"Les mots de passe ne sont pas identiques\",\n\t\tnewPasswordSameAsOld: \"Le nouveau et le vieux mot de passe doivent être différent\"\n\t}\n});\n","i18n.map(\"de\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Passwort zurücksetzen\",\n\t\tnewPassword: \"Neues Passwort\",\n\t\tnewPasswordAgain: \"Neues Passwort (wiederholen)\",\n\t\tcancel: \"Abbrechen\",\n\t\tsubmit: \"Passwort ändern\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Passwort wählen\",\n\t\tnewPassword: \"Neues Passwort\",\n\t\tnewPasswordAgain: \"Neues Passwort (wiederholen)\",\n\t\tcancel: \"Schließen\",\n\t\tsubmit: \"Passwort ändern\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Email Adresse verifiziert\",\n\t\tdismiss: \"Schließen\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Schließen\"\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Passwort ändern\",\n\t\tsignOut: \"Abmelden\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Anmelden\",\n\t\tup: \"Registrieren\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"oder\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Erstellen\",\n\t\tsignIn: \"Anmelden\",\n\t\tforgot: \"Passwort vergessen?\",\n\t\tcreateAcc: \"Account erstellen\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Email\",\n\t\treset: \"Passwort zurücksetzen\",\n\t\tinvalidEmail: \"Ungültige Email Adresse\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Abbrechen\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Passwort ändern\",\n\t\tcancel: \"Abbrechen\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Anmelden mit\",\n\t\tconfigure: \"Konfigurieren\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Abmelden\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Keine Anmelde Services konfiguriert\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Benutzername oder Email\",\n\t\tusername: \"Benutzername\",\n\t\temail: \"Email\",\n\t\tpassword: \"Passwort\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Benutzername\",\n\t\temail: \"Email\",\n\t\temailOpt: \"Email (freiwillig)\",\n\t\tpassword: \"Passwort\",\n\t\tpasswordAgain: \"Passwort (wiederholen)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Aktuelles Passwort\",\n\t\tnewPassword: \"Neues Passwort\",\n\t\tnewPasswordAgain: \"Neues Passwort (wiederholen)\"\n\t},\n\tinfoMessages : {\n\t\tsent: \"Email gesendet\",\n\t\tpasswordChanged: \"Passwort geändert\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"Benutzer nicht gefunden\",\n\t\tinvalidEmail: \"Ungültige Email Adresse\",\n\t\tincorrectPassword: \"Falsches Passwort\",\n\t\tusernameTooShort: \"Der Benutzername muss mindestens 3 Buchstaben lang sein\",\n\t\tpasswordTooShort: \"Passwort muss mindestens 6 Zeichen lang sein\",\n\t\tpasswordsDontMatch: \"Die Passwörter stimmen nicht überein\",\n\t\tnewPasswordSameAsOld: \"Neue und aktuelle Passwörter müssen unterschiedlich sein\"\n\t}\n});\n","i18n.map(\"it\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Reimposta la password\",\n\t\tnewPassword: \"Nuova password\",\n\t\tnewPasswordAgain: \"Nuova password (di nuovo)\",\n\t\tcancel: \"Annulla\",\n\t\tsubmit: \"Imposta password\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Scegli una password\",\n\t\tnewPassword: \"Nuova password\",\n\t\tnewPasswordAgain: \"Nuova password (di nuovo)\",\n\t\tcancel: \"Chiudi\",\n\t\tsubmit: \"Imposta password\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Indirizzo email verificato\",\n\t\tdismiss: \"Chiudi\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Chiudi\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Cambia password\",\n\t\tsignOut: \"Esci\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Accedi\",\n\t\tup: \"Registrati\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"oppure\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Crea\",\n\t\tsignIn: \"Accedi\",\n\t\tforgot: \"Password dimenticata?\",\n\t\tcreateAcc: \"Crea un account\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Email\",\n\t\treset: \"Reimposta la password\",\n\t\tinvalidEmail: \"Email non valida\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Cancella\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Cambia password\",\n\t\tcancel: \"Annulla\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Accedi con\",\n\t\tconfigure: \"Configura\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Esci\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Nessun servizio di accesso configurato\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Username o Email\",\n\t\tusername: \"Username\",\n\t\temail: \"Email\",\n\t\tpassword: \"Password\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Username\",\n\t\temail: \"Email\",\n\t\temailOpt: \"Email (opzionale)\",\n\t\tpassword: \"Password\",\n\t\tpasswordAgain: \"Password (di nuovo)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Password corrente\",\n\t\tnewPassword: \"Nuova password\",\n\t\tnewPasswordAgain: \"Nuova password (di nuovo)\"\n\t},\n\tinfoMessages: {\n\t\tsent: \"Email inviata\",\n\t\tpasswordChanged: \"Password changed\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"User not found\",\n\t\tinvalidEmail: \"Email non valida\",\n\t\tincorrectPassword: \"Incorrect password\",\n\t\tusernameTooShort: \"La Username deve essere almeno di 3 caratteri\",\n\t\tpasswordTooShort: \"La Password deve essere almeno di 6 caratteri\",\n\t\tpasswordsDontMatch: \"Le password non corrispondono\",\n\t\tnewPasswordSameAsOld: \"New and old passwords must be different\"\n\t}\n});\n","ptPT = {\n\tresetPasswordDialog: {\n\t\ttitle: \"Esqueci-me da palavra-passe\",\n\t\tnewPassword: \"Nova palavra-passe\",\n\t\tnewPasswordAgain: \"Nova palavra-passe (confirmacao)\",\n\t\tcancel: \"Cancelar\",\n\t\tsubmit: \"Alterar palavra-passe\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Introduza a nova palavra-passe\",\n\t\tnewPassword: \"Nova palavra-passe\",\n\t\tnewPasswordAgain: \"Nova palavra-passe (confirmacao)\",\n\t\tcancel: \"Fechar\",\n\t\tsubmit: \"Alterar palavra-passe\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"E-mail verificado!\",\n\t\tdismiss: \"Ignorar\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Ignorar\"\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Mudar palavra-passe\",\n\t\tsignOut: \"Sair\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Entrar\",\n\t\tup: \"Registar\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"ou\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Criar\",\n\t\tsignIn: \"Entrar\",\n\t\tforgot: \"Esqueci-me da palavra-passe\",\n\t\tcreateAcc: \"Registar\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"E-mail\",\n\t\treset: \"Alterar palavra-passe\",\n\t\tsent: \"E-mail enviado\",\n\t\tinvalidEmail: \"E-mail inválido\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Cancelar\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Mudar palavra-passe\",\n\t\tcancel: \"Cancelar\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Entrar com\",\n\t\tconfigure: \"Configurar\"\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Sair\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Nenhum servico de login configurado\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Utilizador ou E-mail\",\n\t\tusername: \"Utilizador\",\n\t\temail: \"E-mail\",\n\t\tpassword: \"Palavra-passe\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Utilizador\",\n\t\temail: \"E-mail\",\n\t\temailOpt: \"E-mail (opcional)\",\n\t\tpassword: \"Palavra-passe\",\n\t\tpasswordAgain: \"Palavra-passe (confirmacão)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Palavra-passe atual\",\n\t\tnewPassword: \"Nova palavra-passe\",\n\t\tnewPasswordAgain: \"Nova palavra-passe (confirmacao)\"\n\t},\n\tinfoMessages: {\n\t\tsent: \"E-mail enviado\",\n\t\tpasswordChanged: \"Palavra-passe alterada\"\n\t},\n\terrorMessages: {\n\t\tusernameTooShort: \"Utilizador precisa de ter mais de 3 caracteres\",\n\t\tinvalidEmail: \"E-mail inválido\",\n\t\tpasswordTooShort: \"Palavra-passe precisa ter mais de 6 caracteres\",\n\t\tpasswordsDontMatch: \"As Palavras-passe estão diferentes\",\n\t\tuserNotFound: \"Utilizador não encontrado\",\n\t\tincorrectPassword: \"Palavra-passe incorreta\",\n\t\tnewPasswordSameAsOld: \"A nova palavra-passe tem de ser diferente da antiga\"\n\t}\n};\n","ptBR = {\n\tresetPasswordDialog: {\n\t\ttitle: \"Esqueceu sua senha?\",\n\t\tnewPassword: \"Nova senha\",\n\t\tnewPasswordAgain: \"Nova senha (confirmacao)\",\n\t\tcancel: \"Cancelar\",\n\t\tsubmit: \"Alterar senha\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Digite a nova senha\",\n\t\tnewPassword: \"Nova senha\",\n\t\tnewPasswordAgain: \"Nova senha (confirmacao)\",\n\t\tcancel: \"Fechar\",\n\t\tsubmit: \"Alterar senha\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"E-mail verificado!\",\n\t\tdismiss: \"Ignorar\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Ignorar\"\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Mudar senha\",\n\t\tsignOut: \"Sair\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Entrar\",\n\t\tup: \"Cadastrar\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"ou\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Criar\",\n\t\tsignIn: \"Login\",\n\t\tforgot: \"Esqueceu sua senha?\",\n\t\tcreateAcc: \"Cadastrar\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"E-mail\",\n\t\treset: \"Alterar senha\",\n\t\tinvalidEmail: \"E-mail inválido\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Cancelar\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Mudar senha\",\n\t\tcancel: \"Cancelar\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Logar com\",\n\t\tconfigure: \"Configurar\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Sair\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Nenhum servico de login configurado\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Usuário ou E-mail\",\n\t\tusername: \"Usuário\",\n\t\temail: \"E-mail\",\n\t\tpassword: \"Senha\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Usuário\",\n\t\temail: \"E-mail\",\n\t\temailOpt: \"E-mail (opcional)\",\n\t\tpassword: \"Senha\",\n\t\tpasswordAgain: \"Senha (confirmacão)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Senha atual\",\n\t\tnewPassword: \"Nova Senha\",\n\t\tnewPasswordAgain: \"Nova Senha (confirmacao)\"\n\t},\n\tinfoMessages: {\n\t\tsent: \"E-mail enviado\",\n\t\tpasswordChanged: \"Senha alterada\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"Usuário não encontrado\",\n\t\tinvalidEmail: \"E-mail inválido\",\n\t\tincorrectPassword: \"Senha incorreta\",\n\t\tusernameTooShort: \"Usuário precisa ter mais de 3 caracteres\",\n\t\tpasswordTooShort: \"Senha precisa ter mais de 6 caracteres\",\n\t\tpasswordsDontMatch: \"Senhas estão diferentes\",\n\t\tnewPasswordSameAsOld: \"A nova senha tem de ser diferente da antiga\"\n\t}\n};\n","i18n.map('pt', ptPT);\ni18n.map('pt-PT', ptPT);\ni18n.map('pt-BR', ptBR);\n","i18n.map(\"ru\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Сбросить пароль\",\n\t\tnewPassword: \"Новый пароль\",\n\t\tnewPasswordAgain: \"Новый пароль (еще раз)\",\n\t\tcancel: \"Отмена\",\n\t\tsubmit: \"Сохранить пароль\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Выбрать пароль\",\n\t\tnewPassword: \"Новый пароль\",\n\t\tnewPasswordAgain: \"Новый пароль (еще раз)\",\n\t\tcancel: \"Отмена\",\n\t\tsubmit: \"Сохранить пароль\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Email подтвержден\",\n\t    dismiss: \"Закрыть\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t    dismiss: \"Закрыть\"\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Изменить пароль\",\n\t\tsignOut: \"Выйти\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Войти\",\n\t\tup: \"Зарегистрироваться\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"или\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Создать\",\n\t\tsignIn: \"Войти\",\n\t\tforgot: \"Забыли пароль?\",\n\t\tcreateAcc: \"Создать аккаунт\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Email\",\n\t\treset: \"Сбросить пароль\",\n\t\tinvalidEmail: \"Некорректный email\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Отмена\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Изменить пароль\",\n\t\tcancel: \"Отмена\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Войти через\",\n\t\tconfigure: \"Настроить вход через\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Выйти\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Сервис для входа не настроен\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Имя пользователя или email\",\n\t\tusername: \"Имя пользователя\",\n\t\temail: \"Email\",\n\t\tpassword: \"Пароль\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Имя пользователя\",\n\t\temail: \"Email\",\n\t\temailOpt: \"Email (необязательный)\",\n\t\tpassword: \"Пароль\",\n\t\tpasswordAgain: \"Пароль (еще раз)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Текущий пароль\",\n\t\tnewPassword: \"Новый пароль\",\n\t\tnewPasswordAgain: \"Новый пароль (еще раз)\"\n\t},\n\tinfoMessages : {\n\t\tsent: \"Вам отправлено письмо\",\n\t\tpasswordChanged: \"Пароль изменён\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"Пользователь не найден\",\n\t\tinvalidEmail: \"Некорректный email\",\n\t\tincorrectPassword: \"Неправильный пароль\",\n\t\tusernameTooShort: \"Имя пользователя должно быть длиной не менее 3-х символов\",\n\t\tpasswordTooShort: \"Пароль должен быть длиной не менее 6-ти символов\",\n\t\tpasswordsDontMatch: \"Пароли не совпадают\",\n\t\tnewPasswordSameAsOld: \"Новый и старый пароли должны быть разными\"\n\t}\n});\n","i18n.map(\"el\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Ακύρωση κωδικού\",\n\t\tnewPassword: \"Νέος κωδικός\",\n\t\tnewPasswordAgain: \"Νέος Κωδικός (ξανά)\",\n\t\tcancel: \"Ακύρωση\",\n\t\tsubmit: \"Ορισμός κωδικού\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Επιλέξτε κωδικό\",\n\t\tnewPassword: \"Νέος κωδικός\",\n\t\tnewPasswordAgain: \"Νέος Κωδικός (ξανά)\",\n\t\tcancel: \"Ακύρωση\",\n\t\tsubmit: \"Ορισμός κωδικού\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Ο λογαριασμός ηλεκτρονικού ταχυδρομείου έχει επιβεβαιωθεί\",\n\t\tdismiss: \"Κλείσιμο\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Κλείσιμο\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Αλλαγή κωδικού\",\n\t\tsignOut: \"Αποσύνδεση\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Είσοδος\",\n\t\tup: \"Εγγραφή\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"ή\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Δημιουργία\",\n\t\tsignIn: \"Είσοδος\",\n\t\tforgot: \"Ξεχάσατε τον κωδικό σας;\",\n\t\tcreateAcc: \"Δημιουργία λογαριασμού\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Ηλεκτρονικό ταχυδρομείο (email)\",\n\t\treset: \"Ακύρωση κωδικού\",\n\t\tinvalidEmail: \"Μη έγκυρος λογαριασμός ηλεκτρονικού ταχυδρομείου (email)\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Επιστροφή\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Αλλαγή κωδικού\",\n\t\tcancel: \"Ακύρωση\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Είσοδος με\",\n\t\tconfigure: \"Διαμόρφωση\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Αποσύνδεση\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Δεν έχουν διαμορφωθεί υπηρεσίες εισόδου\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Όνομα χρήστη ή Λογαριασμός Ηλεκτρονικού Ταχυδρομείου\",\n\t\tusername: \"Όνομα χρήστη\",\n\t\temail: \"Ηλεκτρονικό ταχυδρομείο (email)\",\n\t\tpassword: \"Κωδικός\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Όνομα χρήστη\",\n\t\temail: \"Ηλεκτρονικό ταχυδρομείο (email)\",\n\t\temailOpt: \"Ηλεκτρονικό ταχυδρομείο (προαιρετικό)\",\n\t\tpassword: \"Κωδικός\",\n\t\tpasswordAgain: \"Κωδικός (ξανά)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Ισχύων Κωδικός\",\n\t\tnewPassword: \"Νέος Κωδικός\",\n\t\tnewPasswordAgain: \"Νέος Κωδικός (ξανά)\"\n\t},\n\tinfoMessages: {\n\t\temailSent: \"Το email έχει αποσταλεί\",\n\t\tpasswordChanged: \"Password changed\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"User not found\",\n\t\tinvalidEmail: \"Μη έγκυρος λογαριασμός ηλεκτρονικού ταχυδρομείου (email)\",\n\t\tincorrectPassword: \"Incorrect password\",\n\t\tusernameTooShort: \"Το όνομα χρήστη πρέπει να είναι τουλάχιστον 3 χαρακτήρες\",\n\t\tpasswordTooShort: \"Ο κωδικός πρέπει να είναι τουλάχιστον 6 χαρακτήρες\",\n\t\tpasswordsDontMatch: \"Οι κωδικοί δεν ταιριάζουν\",\n\t\tnewPasswordSameAsOld: \"New and old passwords must be different\"\n\t}\n});\n","i18n.map(\"ko\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"비밀번호 초기화하기\",\n\t\tnewPassword: \"새로운 비밀번호\",\n\t\tnewPasswordAgain: \"새로운 비밀번호 (확인)\",\n\t\tcancel: \"취소\",\n\t\tsubmit: \"변경\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"비밀번호를 입력해주세요\",\n\t\tnewPassword: \"새로운 비밀번호\",\n\t\tnewPasswordAgain: \"새로운 비밀번호 (확인)\",\n\t\tcancel: \"닫기\",\n\t\tsubmit: \"변경\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"이메일 주소가 인증되었습니다\",\n\t\tdismiss: \"취소\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"취소\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"비밀번호 변경하기\",\n\t\tsignOut: \"로그아웃\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"로그인\",\n\t\tup: \"계정 만들기\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"또는\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"만들기\",\n\t\tsignIn: \"로그인\",\n\t\tforgot: \"비밀번호를 잊어버리셨나요?\",\n\t\tcreateAcc: \"계정 만들기\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"이메일 주소\",\n\t\treset: \"비밀번호 초기화하기\",\n\t\tinvalidEmail: \"올바르지 않은 이메일 주소입니다\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"취소\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"비밀번호 변경하기\",\n\t\tcancel: \"취소\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"다음으로 로그인하기:\",\n\t\tconfigure: \"설정\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"로그아웃\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"사용 가능한 로그인 서비스가 없습니다\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"사용자 이름 또는 이메일 주소\",\n\t\tusername: \"사용자 이름\",\n\t\temail: \"이메일 주소\",\n\t\tpassword: \"비밀번호\"\n\t},\n\tsignupFields: {\n\t\tusername: \"사용자 이름\",\n\t\temail: \"이메일 주소\",\n\t\temailOpt: \"이메일 주소 (선택)\",\n\t\tpassword: \"비밀번호\",\n\t\tpasswordAgain: \"비밀번호 (확인)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"현재 비밀번호\",\n\t\tnewPassword: \"새로운 비밀번호\",\n\t\tnewPasswordAgain: \"새로운 비밀번호 (확인)\"\n\t},\n\tinfoMessages: {\n\t\tsent: \"이메일이 발송되었습니다\",\n\t\tpasswordChanged: \"비밀번호가 변경되었습니다\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"찾을 수 없는 회원입니다\",\n\t\tinvalidEmail: \"잘못된 이메일 주소\",\n\t\tincorrectPassword: \"비밀번호가 틀렸습니다\",\n\t\tusernameTooShort: \"사용자 이름은 최소 3글자 이상이어야 합니다\",\n\t\tpasswordTooShort: \"비밀번호는 최소 6글자 이상이어야 합니다\",\n\t\tpasswordsDontMatch: \"비밀번호가 같지 않습니다\",\n\t\tnewPasswordSameAsOld: \"새 비밀번호와 기존 비밀번호는 달라야합니다\"\n\t}\n});\n","i18n.map(\"ar\", {\n  resetPasswordDialog: {\n    title: \"استرجع كلمة المرور\",\n    newPassword: \"كلمة المرور الجديدة\",\n    newPasswordAgain: \"أعد كتابة كلمة السر الجديدة\",\n    cancel: \"إلغ\",\n    submit: \"تم\"\n  },\n  enrollAccountDialog: {\n    title: \"اختر كلمة سر\",\n    newPassword: \"كلمة السر\",\n    newPasswordAgain: \"أعد كتابة كلمة السر الجديدة\",\n    cancel: \"أغلق\",\n    submit: \"تم\"\n  },\n  justVerifiedEmailDialog: {\n    verified: \"تم تأكيد البريد\",\n    dismiss:  \"حسنًا\"\n  },\n  loginButtonsMessagesDialog: {\n    dismiss: \"حسنًا\"\n  },\n  loginButtonsLoggedInDropdownActions: {\n    password: \"غير كلمة السر\",\n    signOut: \"تسجيل الخروج\"\n  },\n  loginButtonsLoggedOutDropdown: {\n    signIn: \"دخول\",\n    up: \"إنشاء حساب\"\n  },\n  loginButtonsLoggedOutPasswordServiceSeparator: {\n    or: \"أو\"\n  },\n  loginButtonsLoggedOutPasswordService: {\n    create: \"أنشئ\",\n    signIn: \"دخول\",\n    forgot: \"نسيت كلمة السر؟\",\n    createAcc: \"أنشئ حسابا\"\n  },\n  forgotPasswordForm: {\n    email: \"البريد\",\n    reset: \"إعادة تعين كلمة السر\",\n    invalidEmail: \"البريد خاطئ\"\n  },\n  loginButtonsBackToLoginLink: {\n    back: \"إلغ\"\n  },\n  loginButtonsChangePassword: {\n    submit: \"غير كلمة السر\",\n    cancel: \"إلغ\"\n  },\n  loginButtonsLoggedOutSingleLoginButton: {\n    signInWith: \"سجل الدخول عبر\",\n    configure: \"تعيين\"\n  },\n  loginButtonsLoggedInSingleLogoutButton: {\n    signOut: \"اخرج\"\n  },\n  loginButtonsLoggedOut: {\n    noLoginServices: \"لا يوجد خدمة دخول مفعله\"\n  },\n  loginFields: {\n    usernameOrEmail: \"اسم المستخدم او عنوان البريد\",\n    username: \"اسم المستخدم\",\n    email: \"البريد\",\n    password: \"كلمة السر\"\n  },\n  signupFields: {\n    username: \"اسم المستخدم\",\n    email: \"البريد\",\n    emailOpt: \"-اختياري- البريد\",\n    password: \"كلمة السر\",\n    passwordAgain: \"أعد كتابة كلمة السر\"\n  },\n  changePasswordFields: {\n    currentPassword: \"كلمة السر الحالية\",\n    newPassword: \"كلمة السر الجديدة\",\n    newPasswordAgain: \"أعد كتابة كلمة السر الجديدة\"\n  },\n  infoMessages : {\n    emailSent: \"تم الارسال\",\n    passwordChanged: \"تمت إعادة تعيين كلمة السر\"\n  },\n  errorMessages: {\n    userNotFound: \"المستخدم غير موجود\",\n    invalidEmail: \"بريد خاطئ\",\n    incorrectPassword: \"كلمة السر خطأ\",\n    usernameTooShort: \"اسم المستخدم لابد ان يكون علي الاقل ٣ حروف\",\n    passwordTooShort: \"كلمة السر لابد ان تكون علي الاقل ٦ احرف\",\n    passwordsDontMatch: \"كلمة السر غير متطابقة\",\n    newPasswordSameAsOld: \"لابد من اختيار كلمة سر مختلفة عن السابقة\",\n    signupsForbidden: \"التسجيل مغلق\"\n  }\n});\n","i18n.map(\"pl\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Resetuj hasło\",\n\t\tnewPassword: \"Nowe hasło\",\n\t\tnewPasswordAgain: \"Nowe hasło (powtórz)\",\n\t\tcancel: \"Anuluj\",\n\t\tsubmit: \"Ustaw hasło\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Wybierz hasło\",\n\t\tnewPassword: \"Nowe hasło\",\n\t\tnewPasswordAgain: \"Nowe hasło (powtórz)\",\n\t\tcancel: \"Zamknij\",\n\t\tsubmit: \"Ustaw hasło\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"Adres email został zweryfikowany\",\n\t\tdismiss: \"Odrzuć\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Odrzuć\"\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Zmień hasło\",\n\t\tsignOut: \"Wyloguj się\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Zaloguj się\",\n\t\tup: \"Zarejestruj się\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"lub\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Stwórz\",\n\t\tsignIn: \"Zaloguj się \",\n\t\tforgot: \"Nie pamiętasz hasła?\",\n\t\tcreateAcc: \"Utwórz konto\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"Email\",\n\t\treset: \"Resetuj hasło\",\n\t\tinvalidEmail: \"Niepoprawny email\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Anuluj\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Zmień hasło\",\n\t\tcancel: \"Anuluj\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Zaloguj się przez\",\n\t\tconfigure: \"Configure\"\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Wyloguj się\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Nie skonfigurowano usługi logowania\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Nazwa użytkownika lub email\",\n\t\tusername: \"Nazwa użytkownika\",\n\t\temail: \"Email\",\n\t\tpassword: \"Hasło\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Nazwa użytkownika\",\n\t\temail: \"Email\",\n\t\temailOpt: \"Email (opcjonalnie)\",\n\t\tpassword: \"Hasło\",\n\t\tpasswordAgain: \"Hasło (powtórz)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Obecne hasło\",\n\t\tnewPassword: \"Nowe hasło\",\n\t\tnewPasswordAgain: \"Nowe hasło (powtórz)\"\n\t},\n\tinfoMessages : {\n\t\temailSent: \"Wysłano email\",\n\t\tpasswordChanged: \"Hasło zostało zmienione\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"Nie znaleziono użytkownika\",\n\t\tinvalidEmail: \"Niepoprawny email\",\n\t\tincorrectPassword: \"Niepoprawne hasło\",\n\t\tusernameTooShort: \"Nazwa użytkowika powinna mieć przynajmniej 3 znaki\",\n\t\tpasswordTooShort: \"Hasło powinno składać się przynajmnej z 6 znaków\",\n\t\tpasswordsDontMatch: \"Hasło są różne\",\n\t\tnewPasswordSameAsOld: \"Nowe hasło musi się różnić od starego\",\n\t\tsignupsForbidden: \"Rejstracja wyłączona\"\n\t}\n});\n","zhCN = {\n    resetPasswordDialog: {\n        title: \"重置密码\",\n        newPassword: \"新密码\",\n        newPasswordAgain: \"重复新密码\",\n        cancel: \"取消\",\n        submit: \"确定\"\n    },\n    enrollAccountDialog: {\n        title: \"选择一个密码\",\n        newPassword: \"新密码\",\n        newPasswordAgain: \"重复新密码\",\n        cancel: \"取消\",\n        submit: \"确定\"\n    },\n    justVerifiedEmailDialog: {\n        verified: \"Email地址验证\",\n        dismiss: \"失败\"\n    },\n    loginButtonsMessagesDialog: {\n        dismiss: \"失败\"\n    },\n    loginButtonsLoggedInDropdownActions: {\n        password: \"更改密码\",\n        signOut: \"退出\"\n    },\n    loginButtonsLoggedOutDropdown: {\n        signIn: \"登录\",\n        up: \"注册\"\n    },\n    loginButtonsLoggedOutPasswordServiceSeparator: {\n        or: \"或\"\n    },\n    loginButtonsLoggedOutPasswordService: {\n        create: \"新建\",\n        signIn: \"登陆\",\n        forgot: \"忘记密码?\",\n        createAcc: \"新建用户\"\n    },\n    forgotPasswordForm: {\n        email: \"Email\",\n        reset: \"重置密码\",\n        invalidEmail: \"email格式不正确\"\n    },\n    loginButtonsBackToLoginLink: {\n        back: \"取消\"\n    },\n    loginButtonsChangePassword: {\n        submit: \"更改密码\",\n        cancel: \"取消\"\n    },\n    loginButtonsLoggedOutSingleLoginButton: {\n        signInWith: \"登陆以\",\n        configure: \"配置\"\n    },\n    loginButtonsLoggedInSingleLogoutButton: {\n        signOut: \"退出\"\n    },\n    loginButtonsLoggedOut: {\n        noLoginServices: \"没有配置登录服务\"\n    },\n    loginFields: {\n        usernameOrEmail: \"用户名或者Email\",\n        username: \"用户名\",\n        email: \"Email\",\n        password: \"密码\"\n    },\n    signupFields: {\n        username: \"用户名\",\n        email: \"Email\",\n        emailOpt: \"Email (可选)\",\n        password: \"密码\",\n        passwordAgain: \"重复密码\"\n    },\n    changePasswordFields: {\n        currentPassword: \"当前密码\",\n        newPassword: \"新密码\",\n        newPasswordAgain: \"重复新密码\"\n    },\n    infoMessages: {\n        emailSent: \"发送Email\",\n        passwordChanged: \"密码更改成功\"\n    },\n    errorMessages: {\n        userNotFound: \"用户不存在\",\n        invalidEmail: \"Email格式不正确\",\n        incorrectPassword: \"密码错误\",\n        usernameTooShort: \"用户名必需大于3位\",\n        passwordTooShort: \"密码必需大于6位\",\n        passwordsDontMatch: \"密码输入不一致\",\n        newPasswordSameAsOld: \"新密码和旧的不能一样\",\n        signupsForbidden: \"没有权限\"\n    }\n};\n","zhTW = {\n    resetPasswordDialog: {\n        title: \"重設密碼\",\n        newPassword: \"新密碼\",\n        newPasswordAgain: \"重複新密碼\",\n        cancel: \"取消\",\n        submit: \"確定\"\n    },\n    enrollAccountDialog: {\n        title: \"選擇一個密碼\",\n        newPassword: \"新密碼\",\n        newPasswordAgain: \"重複新密碼\",\n        cancel: \"取消\",\n        submit: \"確定\"\n    },\n    justVerifiedEmailDialog: {\n        verified: \"Email驗證\",\n        dismiss: \"失敗\"\n    },\n    loginButtonsMessagesDialog: {\n        dismiss: \"失敗\"\n    },\n    loginButtonsLoggedInDropdownActions: {\n        password: \"更改密碼\",\n        signOut: \"登出\"\n    },\n    loginButtonsLoggedOutDropdown: {\n        signIn: \"登入\",\n        up: \"註冊\"\n    },\n    loginButtonsLoggedOutPasswordServiceSeparator: {\n        or: \"或\"\n    },\n    loginButtonsLoggedOutPasswordService: {\n        create: \"新建\",\n        signIn: \"登入\",\n        forgot: \"忘记密碼?\",\n        createAcc: \"新建用户\"\n    },\n    forgotPasswordForm: {\n        email: \"Email\",\n        reset: \"重設密碼\",\n        invalidEmail: \"email格式不正確\"\n    },\n    loginButtonsBackToLoginLink: {\n        back: \"取消\"\n    },\n    loginButtonsChangePassword: {\n        submit: \"更改密碼\",\n        cancel: \"取消\"\n    },\n    loginButtonsLoggedOutSingleLoginButton: {\n        signInWith: \"登入以\",\n        configure: \"設定\"\n    },\n    loginButtonsLoggedInSingleLogoutButton: {\n        signOut: \"退出\"\n    },\n    loginButtonsLoggedOut: {\n        noLoginServices: \"沒有設定登入服务\"\n    },\n    loginFields: {\n        usernameOrEmail: \"用户名或者Email\",\n        username: \"用户名\",\n        email: \"Email\",\n        password: \"密碼\"\n    },\n    signupFields: {\n        username: \"用户名\",\n        email: \"Email\",\n        emailOpt: \"Email (可選)\",\n        password: \"密碼\",\n        passwordAgain: \"重複密碼\"\n    },\n    changePasswordFields: {\n        currentPassword: \"目前密碼\",\n        newPassword: \"新密碼\",\n        newPasswordAgain: \"重複新密碼\"\n    },\n    infoMessages: {\n        emailSent: \"發送Email\",\n        passwordChanged: \"密碼更改成功\"\n    },\n    errorMessages: {\n        userNotFound: \"用户不存在\",\n        invalidEmail: \"Email格式不正確\",\n        incorrectPassword: \"密碼错误\",\n        usernameTooShort: \"用户名必需大于3位\",\n        passwordTooShort: \"密碼必需大于6位\",\n        passwordsDontMatch: \"密碼输入不一致\",\n        newPasswordSameAsOld: \"新密碼和舊的不能一樣\",\n        signupsForbidden: \"沒有權限\"\n    }\n};\n","i18n.map(\"zh\", zhCN);\ni18n.map(\"zh-CN\", zhCN);\ni18n.map(\"zh-TW\", zhTW);\n","i18n.map(\"nl\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"Wachtwoord resetten\",\n\t\tnewPassword: \"Nieuw wachtwoord\",\n\t\tnewPasswordAgain: \"Nieuw wachtwoord (opnieuw)\",\n\t\tcancel: \"Annuleren\",\n\t\tsubmit: \"Wachtwoord instellen\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"Stel een wachtwoord in\",\n\t\tnewPassword: \"Nieuw wachtwoord\",\n\t\tnewPasswordAgain: \"Nieuw wachtwoord (opnieuw)\",\n\t\tcancel: \"Sluiten\",\n\t\tsubmit: \"Wachtwoord instellen\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"E-mailadres geverifieerd\",\n\t\tdismiss: \"Sluiten\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"Sluiten\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"Wachtwoord veranderen\",\n\t\tsignOut: \"Afmelden\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"Aanmelden\",\n\t\tup: \"Registreren\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"of\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"Aanmaken\",\n\t\tsignIn: \"Aanmelden\",\n\t\tforgot: \"Wachtwoord vergeten?\",\n\t\tcreateAcc: \"Account aanmaken\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"E-mailadres\",\n\t\treset: \"Wachtwoord opnieuw instellen\",\n\t\tinvalidEmail: \"Ongeldig e-mailadres\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"Annuleren\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"Wachtwoord veranderen\",\n\t\tcancel: \"Annuleren\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"Aanmelden via\",\n\t\tconfigure: \"Instellen\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"Afmelden\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"Geen aanmelddienst ingesteld\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"Gebruikersnaam of e-mailadres\",\n\t\tusername: \"Gebruikersnaam\",\n\t\temail: \"E-mailadres\",\n\t\tpassword: \"Wachtwoord\"\n\t},\n\tsignupFields: {\n\t\tusername: \"Gebruikersnaam\",\n\t\temail: \"E-mailadres\",\n\t\temailOpt: \"E-mailadres (niet verplicht)\",\n\t\tpassword: \"Wachtwoord\",\n\t\tpasswordAgain: \"Wachtwoord (opnieuw)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"Huidig wachtwoord\",\n\t\tnewPassword: \"Nieuw wachtwoord\",\n\t\tnewPasswordAgain: \"Nieuw wachtwoord (opnieuw)\"\n\t},\n\tinfoMessages : {\n\t\temailSent: \"E-mail verstuurd\",\n\t\tpasswordChanged: \"Wachtwoord veranderd\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"Gebruiker niet gevonden\",\n\t\tinvalidEmail: \"Ongeldig e-mailadres\",\n\t\tincorrectPassword: \"Onjuist wachtwoord\",\n\t\tusernameTooShort: \"De gebruikersnaam moet minimaal uit 3 tekens bestaan\",\n\t\tpasswordTooShort: \"Het wachtwoord moet minimaal uit 6 tekens bestaan\",\n\t\tpasswordsDontMatch: \"De wachtwoorden komen niet overeen\",\n\t\tnewPasswordSameAsOld: \"Het oude en het nieuwe wachtwoord mogen niet hetzelfde zijn\",\n\t\tsignupsForbidden: \"Aanmeldingen niet toegestaan\"\n\t}\n});\n","i18n.map(\"ja\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"パスワードを再設定する\",\n\t\tnewPassword: \"新しいパスワード\",\n\t\tnewPasswordAgain: \"新しいパスワード (確認)\",\n\t\tcancel: \"キャンセル\",\n\t\tsubmit: \"パスワードを設定\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"パスワードを決める\",\n\t\tnewPassword: \"新しいパスワード\",\n\t\tnewPasswordAgain: \"新しいパスワード (確認)\",\n\t\tcancel: \"閉じる\",\n\t\tsubmit: \"パスワードを設定\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"メールアドレス菅確認されました\",\n\t\tdismiss: \"閉じる\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"閉じる\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"パスワードを変える\",\n\t\tsignOut: \"サインアウト\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"サインイン\",\n\t\tup: \"参加\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"または\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"作成\",\n\t\tsignIn: \"サインイン\",\n\t\tforgot: \"パスワードを忘れましたか?\",\n\t\tcreateAcc: \"アカウントを作成\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"メール\",\n\t\treset: \"パスワードを再設定する\",\n\t\tinvalidEmail: \"無効なメール\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"キャンセル\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"パスワードを変える\",\n\t\tcancel: \"キャンセル\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"サインインする\",\n\t\tconfigure: \"設定する\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"サインアウト\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"ログインサービスが設定されていません\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"ユーザー名またはメール\",\n\t\tusername: \"ユーザー名\",\n\t\temail: \"メール\",\n\t\tpassword: \"パスワード\"\n\t},\n\tsignupFields: {\n\t\tusername: \"ユーザー名\",\n\t\temail: \"メール\",\n\t\temailOpt: \"メール (オプション)\",\n\t\tpassword: \"パスワード\",\n\t\tpasswordAgain: \"パスワード (確認)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"現在のパスワード\",\n\t\tnewPassword: \"新しいパスワード\",\n\t\tnewPasswordAgain: \"新しいパスワード (確認)\"\n\t},\n\tinfoMessages : {\n\t\temailSent: \"メールを送りました\",\n\t\tpasswordChanged: \"パスワードが変わりました\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"ユーザーが見つかりません\",\n\t\tinvalidEmail: \"無効なメール\",\n\t\tincorrectPassword: \"無効なパスワード\",\n\t\tusernameTooShort: \"ユーザー名は3文字以上でなければいけません\",\n\t\tpasswordTooShort: \"パスワードは6文字以上でなければいけません\",\n\t\tpasswordsDontMatch: \"パスワードが一致しません\",\n\t\tnewPasswordSameAsOld: \"新しいパスワードは古いパスワードと違っていなければいけません\",\n\t\tsignupsForbidden: \"サインアップが許可されませんでした\"\n\t}\n});\n","i18n.map(\"he\", {\n\tresetPasswordDialog: {\n\t\ttitle: \"איפוס סיסמא\",\n\t\tnewPassword: \"סיסמא חדשה\",\n\t\tnewPasswordAgain: \"סיסמא חדשה (שוב)\",\n\t\tcancel: \"ביטול\",\n\t\tsubmit: \"קביעת סיסמא\"\n\t},\n\tenrollAccountDialog: {\n\t\ttitle: \"בחירת סיסמא\",\n\t\tnewPassword: \"סיסמא חדשה\",\n\t\tnewPasswordAgain: \"סיסמא חדשה (שוב)\",\n\t\tcancel: \"סגירה\",\n\t\tsubmit: \"קביעת סיסמא\"\n\t},\n\tjustVerifiedEmailDialog: {\n\t\tverified: \"כתובת דואר אלקטרוני אומתה\",\n\t\tdismiss: \"סגירה\"\n\t},\n\tloginButtonsMessagesDialog: {\n\t\tdismiss: \"סגירה\",\n\t},\n\tloginButtonsLoggedInDropdownActions: {\n\t\tpassword: \"שינוי סיסמא\",\n\t\tsignOut: \"יציאה\"\n\t},\n\tloginButtonsLoggedOutDropdown: {\n\t\tsignIn: \"כניסה\",\n\t\tup: \"רישום\"\n\t},\n\tloginButtonsLoggedOutPasswordServiceSeparator: {\n\t\tor: \"או\"\n\t},\n\tloginButtonsLoggedOutPasswordService: {\n\t\tcreate: \"יצירה\",\n\t\tsignIn: \"התחברות\",\n\t\tforgot: \"סיסמא נשכחה?\",\n\t\tcreateAcc: \"יצירת חשבון\"\n\t},\n\tforgotPasswordForm: {\n\t\temail: \"דואר אלקטרוני (אימייל)\",\n\t\treset: \"איפוס סיסמא\",\n\t\tinvalidEmail: \"כתובת דואר אלקטרוני לא חוקית\"\n\t},\n\tloginButtonsBackToLoginLink: {\n\t\tback: \"ביטול\"\n\t},\n\tloginButtonsChangePassword: {\n\t\tsubmit: \"שינוי סיסמא\",\n\t\tcancel: \"ביטול\"\n\t},\n\tloginButtonsLoggedOutSingleLoginButton: {\n\t\tsignInWith: \"התחברות עםh\",\n\t\tconfigure: \"הגדרות\",\n\t},\n\tloginButtonsLoggedInSingleLogoutButton: {\n\t\tsignOut: \"התנתקות\"\n\t},\n\tloginButtonsLoggedOut: {\n\t\tnoLoginServices: \"שירותים התחברות נוספים לא הוגדרו\"\n\t},\n\tloginFields: {\n\t\tusernameOrEmail: \"שם משתמש או כתובת דואר אלקטרוני\",\n\t\tusername: \"שם משתמש\",\n\t\temail: \"דואר אלקטרוני\",\n\t\tpassword: \"סיסמא\"\n\t},\n\tsignupFields: {\n\t\tusername: \"שם משתמש\",\n\t\temail: \"דואר אלקטרוני\",\n\t\temailOpt: \"דואר אלקטרוני (לא חובה)\",\n\t\tpassword: \"סיסמא\",\n\t\tpasswordAgain: \"סיסמא (שוב)\"\n\t},\n\tchangePasswordFields: {\n\t\tcurrentPassword: \"סיסמא נוכחית\",\n\t\tnewPassword: \"סיסמא חדשה\",\n\t\tnewPasswordAgain: \"סיסמא חדשה (שוב)\"\n\t},\n\tinfoMessages : {\n\t\temailSent: \"דואר אלקטרוני נשלח\",\n\t\tpasswordChanged: \"סיסמא שונתה\"\n\t},\n\terrorMessages: {\n\t\tuserNotFound: \"משתמש/ת לא קיים/מת\",\n\t\tinvalidEmail: \"כתובת דואר אלקטרוני לא חוקי\",\n\t\tincorrectPassword: \"סיסמא שגויה\",\n\t\tusernameTooShort: \"שם משתמש חייב להיות בן 3 תוים לפחות\",\n\t\tpasswordTooShort: \"סיסמא חייבת להיות בת 6 תווים לפחות\",\n\t\tpasswordsDontMatch: \"סיסמאות לא תואמות\",\n\t\tnewPasswordSameAsOld: \"סיסמא חדשה וישנה חייבות להיות שונות\",\n\t\tsignupsForbidden: \"אין אפשרות לרישום\"\n\t}\n});\n","i18n.setDefaultLanguage('en')\n\naccountsUIBootstrap3 = {\n\tsetLanguage: function (lang) {\n\t\treturn i18n.setLanguage(lang)\n\t},\n\tgetLanguage: function () {\n\t\treturn i18n.getLanguage()\n\t},\n\tmap: function (lang, obj) {\n\t\treturn i18n.map(lang, obj)\n\t}\n}\n\n","\nTemplate.__checkName(\"_loginButtons\");\nTemplate[\"_loginButtons\"] = new Template(\"Template._loginButtons\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n\t\t\", Blaze.Unless(function() {\n      return Spacebars.call(view.lookup(\"loggingIn\"));\n    }, function() {\n      return [ \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedIn\")), \"\\n\t\t\" ];\n    }), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOut\")), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedIn\");\nTemplate[\"_loginButtonsLoggedIn\"] = new Template(\"Template._loginButtonsLoggedIn\", (function() {\n  var view = this;\n  return Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedInDropdown\"));\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedOut\");\nTemplate[\"_loginButtonsLoggedOut\"] = new Template(\"Template._loginButtonsLoggedOut\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"services\"));\n  }, function() {\n    return [ \" \\n\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"configurationLoaded\"));\n    }, function() {\n      return [ \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"dropdown\"));\n      }, function() {\n        return [ \" \\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutDropdown\")), \"\\n\t\t\t\" ];\n      }, function() {\n        return [ \"\\n\t\t\t\t\", Spacebars.With(function() {\n          return Spacebars.call(view.lookup(\"singleService\"));\n        }, function() {\n          return [ \" \\n\t\t\t\t\t\", Blaze.Unless(function() {\n            return Spacebars.call(view.lookup(\"logginIn\"));\n          }, function() {\n            return [ \"\\n\t\t\t\t\t\t\", HTML.DIV({\n              \"class\": \"navbar-form\"\n            }, \"\\n\t\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutSingleLoginButton\")), \"\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\" ];\n          }), \"\\n\t\t\t\t\" ];\n        }), \"\\n\t\t\t\" ];\n      }), \"\\n\t\t\" ];\n    }), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"no-services\"\n    }, Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOut.noLoginServices\");\n    })), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_loginButtonsMessages\");\nTemplate[\"_loginButtonsMessages\"] = new Template(\"Template._loginButtonsMessages\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"errorMessage\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"alert alert-danger\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n\t\" ];\n  }), \"\\n\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"infoMessage\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"alert alert-success no-margin\"\n    }, Blaze.View(\"lookup:infoMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"infoMessage\"));\n    })), \"\\n\t\" ];\n  }) ];\n}));\n","\nTemplate.__checkName(\"_loginButtonsLoggedOutSingleLoginButton\");\nTemplate[\"_loginButtonsLoggedOutSingleLoginButton\"] = new Template(\"Template._loginButtonsLoggedOutSingleLoginButton\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"configured\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.BUTTON({\n      \"class\": function() {\n        return [ \"login-button btn btn-block btn-\", Spacebars.mustache(view.lookup(\"capitalizedName\")) ];\n      }\n    }, Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutSingleLoginButton.signInWith\");\n    }), \" \", Blaze.View(\"lookup:capitalizedName\", function() {\n      return Spacebars.mustache(view.lookup(\"capitalizedName\"));\n    })), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\", HTML.BUTTON({\n      \"class\": \"login-button btn btn-block configure-button btn-danger\"\n    }, Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutSingleLoginButton.configure\");\n    }), \" \", Blaze.View(\"lookup:capitalizedName\", function() {\n      return Spacebars.mustache(view.lookup(\"capitalizedName\"));\n    })), \"\\n\t\" ];\n  });\n}));\n","\nTemplate.__checkName(\"_loginButtonsLoggedInDropdown\");\nTemplate[\"_loginButtonsLoggedInDropdown\"] = new Template(\"Template._loginButtonsLoggedInDropdown\", (function() {\n  var view = this;\n  return HTML.LI({\n    id: \"login-dropdown-list\",\n    \"class\": \"dropdown\"\n  }, \"\\n\t\t\", HTML.A({\n    \"class\": \"dropdown-toggle\",\n    \"data-toggle\": \"dropdown\"\n  }, \"\\n\t\t\t\", Blaze.View(\"lookup:displayName\", function() {\n    return Spacebars.mustache(view.lookup(\"displayName\"));\n  }), \"\\n\t\t\t\", Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"user_profile_picture\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\", HTML.IMG({\n      src: function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      },\n      width: \"30px\",\n      height: \"30px\",\n      \"class\": \"img-circle\",\n      alt: \"#\"\n    }), \"\\n\t\t\t\" ];\n  }), \"\\n\t\t\t\", HTML.Raw('<b class=\"caret\"></b>'), \"\\n\t\t\"), \"\\n\t\t\", HTML.DIV({\n    \"class\": \"dropdown-menu\"\n  }, \"\\n\t\t\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"inMessageOnlyFlow\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\t\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"inChangePasswordFlow\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsChangePassword\")), \"\\n\t\t\t\t\" ];\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedInDropdownActions\")), \"\\n\t\t\t\t\" ];\n    }), \"\\n\t\t\t\" ];\n  }), \"\\n\t\t\"), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedInDropdownActions\");\nTemplate[\"_loginButtonsLoggedInDropdownActions\"] = new Template(\"Template._loginButtonsLoggedInDropdownActions\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"additionalLoggedInDropdownActions\"));\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsAdditionalLoggedInDropdownActions\")), \"\\n\t\" ];\n  }), \"\\n\\n\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"allowChangingPassword\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.BUTTON({\n      \"class\": \"btn btn-default btn-block\",\n      id: \"login-buttons-open-change-password\"\n    }, Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedInDropdownActions.password\");\n    })), \"\\n\t\" ];\n  }), \"\\n\\n\t\", HTML.BUTTON({\n    \"class\": \"btn btn-block btn-primary\",\n    id: \"login-buttons-logout\"\n  }, Blaze.View(\"lookup:i18n\", function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedInDropdownActions.signOut\");\n  })) ];\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedOutDropdown\");\nTemplate[\"_loginButtonsLoggedOutDropdown\"] = new Template(\"Template._loginButtonsLoggedOutDropdown\", (function() {\n  var view = this;\n  return HTML.LI({\n    id: \"login-dropdown-list\",\n    \"class\": \"dropdown\"\n  }, \"\\n\t\t\", HTML.A({\n    \"class\": \"dropdown-toggle\",\n    \"data-toggle\": \"dropdown\"\n  }, Blaze.View(\"lookup:i18n\", function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutDropdown.signIn\");\n  }), Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"forbidClientAccountCreation\"));\n  }, function() {\n    return [ \" / \", Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutDropdown.up\");\n    }) ];\n  }), \" \", HTML.Raw('<b class=\"caret\"></b>')), \"\\n\t\t\", HTML.DIV({\n    \"class\": \"dropdown-menu\"\n  }, \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutAllServices\")), \"\\n\t\t\"), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedOutAllServices\");\nTemplate[\"_loginButtonsLoggedOutAllServices\"] = new Template(\"Template._loginButtonsLoggedOutAllServices\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"services\"));\n  }, function() {\n    return [ \"\\n\t\", Blaze.Unless(function() {\n      return Spacebars.call(view.lookup(\"hasPasswordService\"));\n    }, function() {\n      return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\" ];\n    }), \"\\n\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"isPasswordService\"));\n    }, function() {\n      return [ \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasOtherServices\"));\n      }, function() {\n        return [ \" \\n\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutPasswordServiceSeparator\")), \"\\n\t\t\t\" ];\n      }), \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutPasswordService\")), \"\\n\t\t\" ];\n    }, function() {\n      return [ \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutSingleLoginButton\")), \"\\n\t\t\" ];\n    }), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedOutPasswordServiceSeparator\");\nTemplate[\"_loginButtonsLoggedOutPasswordServiceSeparator\"] = new Template(\"Template._loginButtonsLoggedOutPasswordServiceSeparator\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"or\"\n  }, HTML.Raw('\\n\t\t<span class=\"hline\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n\t\t'), HTML.SPAN({\n    \"class\": \"or-text\"\n  }, Blaze.View(\"lookup:i18n\", function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutPasswordServiceSeparator.or\");\n  })), HTML.Raw('\\n\t\t<span class=\"hline\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n\t'));\n}));\n\nTemplate.__checkName(\"_loginButtonsLoggedOutPasswordService\");\nTemplate[\"_loginButtonsLoggedOutPasswordService\"] = new Template(\"Template._loginButtonsLoggedOutPasswordService\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"inForgotPasswordFlow\"));\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_forgotPasswordForm\")), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"fields\"));\n    }, function() {\n      return [ \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsFormField\")), \"\\n\t\t\" ];\n    }), \"\\n\t\t\", HTML.BUTTON({\n      \"class\": \"btn btn-primary col-xs-12 col-sm-12\",\n      id: \"login-buttons-password\",\n      type: \"button\"\n    }, \"\\n\t\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"inSignupFlow\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\", Blaze.View(\"lookup:i18n\", function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutPasswordService.create\");\n      }), \"\\n\t\t\t\" ];\n    }, function() {\n      return [ \"\\n\t\t\t\t\", Blaze.View(\"lookup:i18n\", function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutPasswordService.signIn\");\n      }), \"\\n\t\t\t\" ];\n    }), \"\\n\t\t\"), \"\\n\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"inLoginFlow\"));\n    }, function() {\n      return [ \"\\n\t\t\t\", HTML.DIV({\n        id: \"login-other-options\"\n      }, \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showForgotPasswordLink\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\", HTML.A({\n          id: \"forgot-password-link\",\n          \"class\": \"pull-left\"\n        }, Blaze.View(\"lookup:i18n\", function() {\n          return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutPasswordService.forgot\");\n        })), \"\\n\t\t\t\" ];\n      }), \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showCreateAccountLink\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\", HTML.A({\n          id: \"signup-link\",\n          \"class\": \"pull-right\"\n        }, Blaze.View(\"lookup:i18n\", function() {\n          return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsLoggedOutPasswordService.createAcc\");\n        })), \"\\n\t\t\t\" ];\n      }), \"\\n\t\t\t\"), \"\\n\t\t\" ];\n    }), \"\\n\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"inSignupFlow\"));\n    }, function() {\n      return [ \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsBackToLoginLink\")), \"\\n\t\t\" ];\n    }), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_forgotPasswordForm\");\nTemplate[\"_forgotPasswordForm\"] = new Template(\"Template._forgotPasswordForm\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"login-form\"\n  }, \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\t\", HTML.DIV({\n    id: \"forgot-password-email-label-and-input\"\n  }, \" \\n\t\t\t\", HTML.INPUT({\n    id: \"forgot-password-email\",\n    type: \"email\",\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"forgotPasswordForm.email\");\n    },\n    \"class\": \"form-control\"\n  }), \"\\n\t\t\"), \"\\n\t\t\", HTML.BUTTON({\n    \"class\": \"btn btn-primary login-button-form-submit col-xs-12 col-sm-12\",\n    id: \"login-buttons-forgot-password\"\n  }, Blaze.View(\"lookup:i18n\", function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"forgotPasswordForm.reset\");\n  })), \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsBackToLoginLink\")), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"_loginButtonsBackToLoginLink\");\nTemplate[\"_loginButtonsBackToLoginLink\"] = new Template(\"Template._loginButtonsBackToLoginLink\", (function() {\n  var view = this;\n  return HTML.BUTTON({\n    id: \"back-to-login-link\",\n    \"class\": \"btn btn-default col-xs-12 col-sm-12\"\n  }, Blaze.View(\"lookup:i18n\", function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsBackToLoginLink.back\");\n  }));\n}));\n\nTemplate.__checkName(\"_loginButtonsFormField\");\nTemplate[\"_loginButtonsFormField\"] = new Template(\"Template._loginButtonsFormField\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"visible\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.Comment(\" TODO: Implement more input types \"), \"\\n\t\t\", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"equals\"), view.lookup(\"inputType\"), \"checkbox\");\n    }, function() {\n      return [ \"\\n\t\t\t\", HTML.DIV({\n        \"class\": \"checkbox\"\n      }, \"\\n\t\t\t\t\", HTML.LABEL(HTML.INPUT({\n        type: \"checkbox\",\n        id: function() {\n          return [ \"login-\", Spacebars.mustache(view.lookup(\"fieldName\")) ];\n        },\n        name: function() {\n          return [ \"login-\", Spacebars.mustache(view.lookup(\"fieldName\")) ];\n        },\n        value: \"true\"\n      }), \"\\n\t\t\t\t\", Blaze.View(\"lookup:fieldLabel\", function() {\n        return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"fieldLabel\")));\n      })), \"\\n\t\t\t\"), \"\\n\t\t\" ];\n    }), \"\\n\\n\t\t\", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"equals\"), view.lookup(\"inputType\"), \"select\");\n    }, function() {\n      return [ \"\\n\t\t\t\", HTML.DIV({\n        \"class\": \"select-dropdown\"\n      }, \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showFieldLabel\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\", HTML.LABEL(Blaze.View(\"lookup:fieldLabel\", function() {\n          return Spacebars.mustache(view.lookup(\"fieldLabel\"));\n        })), HTML.BR(), \"\\n\t\t\t\" ];\n      }), \"\\n\t\t\t\", HTML.SELECT({\n        id: function() {\n          return [ \"login-\", Spacebars.mustache(view.lookup(\"fieldName\")) ];\n        }\n      }, \"\\n\t\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"empty\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\t\", HTML.OPTION({\n          value: \"\"\n        }, Blaze.View(\"lookup:empty\", function() {\n          return Spacebars.mustache(view.lookup(\"empty\"));\n        })), \"\\n\t\t\t\t\" ];\n      }), \"\\n\t\t\t\t\", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"data\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\t\", HTML.OPTION({\n          value: function() {\n            return Spacebars.mustache(view.lookup(\"value\"));\n          }\n        }, Blaze.View(\"lookup:label\", function() {\n          return Spacebars.mustache(view.lookup(\"label\"));\n        })), \"\\n\t\t\t\t\" ];\n      }), \"\\n\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\t\" ];\n    }), \"\\n\\n\t\t\", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"equals\"), view.lookup(\"inputType\"), \"radio\");\n    }, function() {\n      return [ \"\\n\t    \", HTML.DIV({\n        \"class\": \"radio\"\n      }, \"\\n\t      \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showFieldLabel\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\", HTML.LABEL(Blaze.View(\"lookup:fieldLabel\", function() {\n          return Spacebars.mustache(view.lookup(\"fieldLabel\"));\n        })), HTML.BR(), \"\\n\t\t\t\t\" ];\n      }), \"\\n\t\t\t\t\", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"data\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\t\", HTML.LABEL(HTML.INPUT(HTML.Attrs({\n          type: \"radio\",\n          id: function() {\n            return [ \"login-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"..\"), \"fieldName\")), \"-\", Spacebars.mustache(view.lookup(\"id\")) ];\n          },\n          name: function() {\n            return [ \"login-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"..\"), \"fieldName\")) ];\n          },\n          value: function() {\n            return Spacebars.mustache(view.lookup(\"value\"));\n          }\n        }, function() {\n          return Spacebars.attrMustache(view.lookup(\"checked\"));\n        })), \" \", Blaze.View(\"lookup:label\", function() {\n          return Spacebars.mustache(view.lookup(\"label\"));\n        })), \"\\n\t\t\t\t\t\", Blaze.If(function() {\n          return Spacebars.dataMustache(view.lookup(\"equals\"), Spacebars.dot(view.lookup(\"..\"), \"radioLayout\"), \"vertical\");\n        }, function() {\n          return [ \"\\n\t\t\t\t\t\t\", HTML.BR(), \"\\n\t\t\t\t\t\" ];\n        }), \"\\n\t\t\t\t\" ];\n      }), \"\\n\t    \"), \"\\n\t\t\" ];\n    }), \"\\n\\n\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"inputTextual\"));\n    }, function() {\n      return [ \"\\n\t\t\t\", HTML.INPUT({\n        id: function() {\n          return [ \"login-\", Spacebars.mustache(view.lookup(\"fieldName\")) ];\n        },\n        type: function() {\n          return Spacebars.mustache(view.lookup(\"inputType\"));\n        },\n        placeholder: function() {\n          return Spacebars.mustache(view.lookup(\"fieldLabel\"));\n        },\n        \"class\": \"form-control\"\n      }), \"\\n\t\t\" ];\n    }), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_loginButtonsChangePassword\");\nTemplate[\"_loginButtonsChangePassword\"] = new Template(\"Template._loginButtonsChangePassword\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"fields\"));\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsFormField\")), \"\\n\t\" ];\n  }), \"\\n\t\", HTML.BUTTON({\n    \"class\": \"btn btn-block btn-primary\",\n    id: \"login-buttons-do-change-password\"\n  }, Blaze.View(\"lookup:i18n\", function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsChangePassword.submit\");\n  })), \"\\n\t\", HTML.BUTTON({\n    \"class\": \"btn btn-block btn-default\",\n    id: \"login-buttons-cancel-change-password\"\n  }, Blaze.View(\"lookup:i18n\", function() {\n    return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsChangePassword.cancel\");\n  })) ];\n}));\n","\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"_resetPasswordDialog\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"_enrollAccountDialog\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"_justVerifiedEmailDialog\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"_configureLoginServiceDialog\")), \"\\n\\n\t\\n\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessagesDialog\")) ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"_resetPasswordDialog\");\nTemplate[\"_resetPasswordDialog\"] = new Template(\"Template._resetPasswordDialog\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"inResetPasswordFlow\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"modal\",\n      id: \"login-buttons-reset-password-modal\"\n    }, \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"modal-dialog\"\n    }, \"\\n\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-content\"\n    }, \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-header\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.BUTTON({\n      type: \"button\",\n      \"class\": \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-hidden\": \"true\"\n    }, HTML.CharRef({\n      html: \"&times;\",\n      str: \"×\"\n    })), \"\\n\t\t\t\t\t\t\", HTML.H4({\n      \"class\": \"modal-title\"\n    }, Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"resetPasswordDialog.title\");\n    })), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-body\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.INPUT({\n      id: \"reset-password-new-password\",\n      \"class\": \"form-control\",\n      type: \"password\",\n      placeholder: function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"resetPasswordDialog.newPassword\");\n      }\n    }), HTML.BR(), \"\\n                        \", HTML.INPUT({\n      id: \"reset-password-new-password-again\",\n      \"class\": \"form-control\",\n      type: \"password\",\n      placeholder: function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"resetPasswordDialog.newPasswordAgain\");\n      }\n    }), HTML.BR(), \"\\n\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-footer\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.A({\n      \"class\": \"btn btn-default\",\n      id: \"login-buttons-cancel-reset-password\"\n    }, Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"resetPasswordDialog.cancel\");\n    })), \"\\n\t\t\t\t\t\t\", HTML.BUTTON({\n      \"class\": \"btn btn-primary\",\n      id: \"login-buttons-reset-password-button\"\n    }, \"\\n\t\t\t\t\t\t\t\", Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"resetPasswordDialog.submit\");\n    }), \"\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), HTML.Comment(\" /.modal-content \"), \"\\n\t\t\t\"), HTML.Comment(\" /.modal-dalog \"), \"\\n\t\t\"), HTML.Comment(\" /.modal \"), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_enrollAccountDialog\");\nTemplate[\"_enrollAccountDialog\"] = new Template(\"Template._enrollAccountDialog\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"inEnrollAccountFlow\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"modal\",\n      id: \"login-buttons-enroll-account-modal\"\n    }, \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"modal-dialog\"\n    }, \"\\n\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-content\"\n    }, \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-header\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.BUTTON({\n      type: \"button\",\n      \"class\": \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-hidden\": \"true\"\n    }, HTML.CharRef({\n      html: \"&times;\",\n      str: \"×\"\n    })), \"\\n\t\t\t\t\t\t\", HTML.H4({\n      \"class\": \"modal-title\"\n    }, Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"enrollAccountDialog.title\");\n    })), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-body\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.INPUT({\n      id: \"enroll-account-password\",\n      \"class\": \"form-control\",\n      type: \"password\",\n      placeholder: function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"enrollAccountDialog.newPassword\");\n      }\n    }), HTML.BR(), \"\\n                        \", HTML.INPUT({\n      id: \"enroll-account-password-again\",\n      \"class\": \"form-control\",\n      type: \"password\",\n      placeholder: function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"enrollAccountDialog.newPasswordAgain\");\n      }\n    }), HTML.BR(), \"\\n\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-footer\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.A({\n      \"class\": \"btn btn-default\",\n      id: \"login-buttons-cancel-enroll-account-button\"\n    }, Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"enrollAccountDialog.cancel\");\n    })), \"\\n\t\t\t\t\t\t\", HTML.BUTTON({\n      \"class\": \"btn btn-primary\",\n      id: \"login-buttons-enroll-account-button\"\n    }, \"\\n\t\t\t\t\t\t\t\", Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"enrollAccountDialog.submit\");\n    }), \"\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), HTML.Comment(\" /.modal-content \"), \"\\n\t\t\t\"), HTML.Comment(\" /.modal-dalog \"), \"\\n\t\t\"), HTML.Comment(\" /.modal \"), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_justVerifiedEmailDialog\");\nTemplate[\"_justVerifiedEmailDialog\"] = new Template(\"Template._justVerifiedEmailDialog\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"visible\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"modal\",\n      id: \"login-buttons-email-address-verified-modal\"\n    }, \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"modal-dialog\"\n    }, \"\\n\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-content\"\n    }, \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-body\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.H4(HTML.B(Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"justVerifiedEmailDialog.verified\");\n    }))), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-footer\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.BUTTON({\n      \"class\": \"btn btn-primary login-button\",\n      id: \"just-verified-dismiss-button\",\n      \"data-dismiss\": \"modal\"\n    }, Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"justVerifiedEmailDialog.dismiss\");\n    })), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_configureLoginServiceDialog\");\nTemplate[\"_configureLoginServiceDialog\"] = new Template(\"Template._configureLoginServiceDialog\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"visible\"));\n  }, function() {\n    return [ \"\\n\t\", HTML.DIV({\n      \"class\": \"modal\",\n      id: \"configure-login-service-dialog-modal\"\n    }, \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"modal-dialog\"\n    }, \"\\n\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-content\"\n    }, \"\\n\t\t\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-header\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\", HTML.H4({\n      \"class\": \"modal-title\"\n    }, \"Configure Service\"), \"\\n\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-body\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\", HTML.DIV({\n      id: \"configure-login-service-dialog\",\n      \"class\": \"accounts-dialog accounts-centered-dialog\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"configurationSteps\")), \"\\n\t\t\t\t\t\t\t\t\t\t\t\", HTML.P(\"\\n\t\t\t\t\t\t\t\t\t\t\tNow, copy over some details.\\n\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\", HTML.P(\"\\n\t\t\t\t\t\t\t\t\t\t\t\", HTML.TABLE(\"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.COLGROUP(\"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.COL({\n      span: \"1\",\n      \"class\": \"configuration_labels\"\n    }), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.COL({\n      span: \"1\",\n      \"class\": \"configuration_inputs\"\n    }), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"configurationFields\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.TR(\"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.TD(\"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.LABEL({\n        \"for\": function() {\n          return [ \"configure-login-service-dialog-\", Spacebars.mustache(view.lookup(\"property\")) ];\n        }\n      }, Blaze.View(\"lookup:label\", function() {\n        return Spacebars.mustache(view.lookup(\"label\"));\n      })), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.TD(\"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.INPUT({\n        id: function() {\n          return [ \"configure-login-service-dialog-\", Spacebars.mustache(view.lookup(\"property\")) ];\n        },\n        type: \"text\"\n      }), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\" ];\n    }), \"\\n\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\", HTML.P({\n      \"class\": \"new-section\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\t\t\tChoose the login style:\\n\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\", HTML.P(\"\\n\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.CharRef({\n      html: \"&emsp;\",\n      str: \" \"\n    }), HTML.INPUT({\n      id: \"configure-login-service-dialog-popupBasedLogin\",\n      type: \"radio\",\n      checked: \"checked\",\n      name: \"loginStyle\",\n      value: \"popup\"\n    }), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.LABEL({\n      \"for\": \"configure-login-service-dialog-popupBasedLogin\"\n    }, \"Popup-based login (recommended for most applications)\"), \"\\n\\n\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.BR(), HTML.CharRef({\n      html: \"&emsp;\",\n      str: \" \"\n    }), HTML.INPUT({\n      id: \"configure-login-service-dialog-redirectBasedLogin\",\n      type: \"radio\",\n      name: \"loginStyle\",\n      value: \"redirect\"\n    }), \"\\n\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.LABEL({\n      \"for\": \"configure-login-service-dialog-redirectBasedLogin\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\t\t\tRedirect-based login (special cases explained\\n\t\t\t\t\t\t\t\t\t\t\t\t\", HTML.A({\n      href: \"https://github.com/meteor/meteor/wiki/OAuth-for-mobile-Meteor-clients#popup-versus-redirect-flow\",\n      target: \"_blank\"\n    }, \"here\"), \")\\n\t\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"modal-footer new-section\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\", HTML.DIV({\n      \"class\": \"login-button btn btn-danger configure-login-service-dismiss-button\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\t\tI'll do this later\\n\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\t\t\", HTML.DIV({\n      \"class\": function() {\n        return [ \"login-button login-button-configure btn btn-success \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"saveDisabled\"));\n        }, function() {\n          return \"login-button-disabled\";\n        }) ];\n      },\n      id: \"configure-login-service-dialog-save-configuration\"\n    }, \"\\n\t\t\t\t\t\t\t\t\t\t\tSave Configuration\\n\t\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\"), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"_loginButtonsMessagesDialog\");\nTemplate[\"_loginButtonsMessagesDialog\"] = new Template(\"Template._loginButtonsMessagesDialog\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"visible\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"accounts-dialog accounts-centered-dialog\",\n      id: \"login-buttons-message-dialog\"\n    }, \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"login-button\",\n      id: \"messages-dialog-dismiss-button\"\n    }, Blaze.View(\"lookup:i18n\", function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"loginButtonsMessagesDialog.dismiss\");\n    })), \"\\n\t\t\"), \"\\n\t\" ];\n  });\n}));\n","(function () {\n\tvar VALID_KEYS = [\n\t\t'dropdownVisible',\n\n\t\t// XXX consider replacing these with one key that has an enum for values.\n\t\t'inSignupFlow',\n\t\t'inForgotPasswordFlow',\n\t\t'inChangePasswordFlow',\n\t\t'inMessageOnlyFlow',\n\n\t\t'errorMessage',\n\t\t'infoMessage',\n\n\t\t// dialogs with messages (info and error)\n\t\t'resetPasswordToken',\n\t\t'enrollAccountToken',\n\t\t'justVerifiedEmail',\n\n\t\t'configureLoginServiceDialogVisible',\n\t\t'configureLoginServiceDialogServiceName',\n\t\t'configureLoginServiceDialogSaveDisabled'\n\t];\n\n\tvar validateKey = function (key) {\n\t\tif (!_.contains(VALID_KEYS, key)){\n\t\t\tthrow new Error(\"Invalid key in loginButtonsSession: \" + key);\n\t\t}\n\t};\n\n\tvar KEY_PREFIX = \"Meteor.loginButtons.\";\n\n\t// XXX we should have a better pattern for code private to a package like this one\n\tAccounts._loginButtonsSession = {\n\t\tset: function(key, value) {\n\t\t\tvalidateKey(key);\n\t\t\tif (_.contains(['errorMessage', 'infoMessage'], key)){\n\t\t\t\tthrow new Error(\"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\");\n\t\t\t}\n\n\t\t\tthis._set(key, value);\n\t\t},\n\n\t\t_set: function(key, value) {\n\t\t\tSession.set(KEY_PREFIX + key, value);\n\t\t},\n\n\t\tget: function(key) {\n\t\t\tvalidateKey(key);\n\t\t\treturn Session.get(KEY_PREFIX + key);\n\t\t},\n\n\t\tcloseDropdown: function () {\n\t\t\tthis.set('inSignupFlow', false);\n\t\t\tthis.set('inForgotPasswordFlow', false);\n\t\t\tthis.set('inChangePasswordFlow', false);\n\t\t\tthis.set('inMessageOnlyFlow', false);\n\t\t\tthis.set('dropdownVisible', false);\n\t\t\tthis.resetMessages();\n\t\t},\n\n\t\tinfoMessage: function(message) {\n\t\t\tthis._set(\"errorMessage\", null);\n\t\t\tthis._set(\"infoMessage\", message);\n\t\t\tthis.ensureMessageVisible();\n\t\t},\n\n\t\terrorMessage: function(message) {\n\t\t\tthis._set(\"errorMessage\", message);\n\t\t\tthis._set(\"infoMessage\", null);\n\t\t\tthis.ensureMessageVisible();\n\t\t},\n\n\t\t// is there a visible dialog that shows messages (info and error)\n\t\tisMessageDialogVisible: function () {\n\t\t\treturn this.get('resetPasswordToken') ||\n\t\t\t\tthis.get('enrollAccountToken') ||\n\t\t\t\tthis.get('justVerifiedEmail');\n\t\t},\n\n\t\t// ensure that somethings displaying a message (info or error) is\n\t\t// visible.  if a dialog with messages is open, do nothing;\n\t\t// otherwise open the dropdown.\n\t\t//\n\t\t// notably this doesn't matter when only displaying a single login\n\t\t// button since then we have an explicit message dialog\n\t\t// (_loginButtonsMessageDialog), and dropdownVisible is ignored in\n\t\t// this case.\n\t\tensureMessageVisible: function () {\n\t\t\tif (!this.isMessageDialogVisible()){\n\t\t\t\tthis.set(\"dropdownVisible\", true);\n\t\t\t}\n\t\t},\n\n\t\tresetMessages: function () {\n\t\t\tthis._set(\"errorMessage\", null);\n\t\t\tthis._set(\"infoMessage\", null);\n\t\t},\n\n\t\tconfigureService: function (name) {\n\t\t\tthis.set('configureLoginServiceDialogVisible', true);\n\t\t\tthis.set('configureLoginServiceDialogServiceName', name);\n\t\t\tthis.set('configureLoginServiceDialogSaveDisabled', true);\n\t\t\tsetTimeout(function(){\n\t\t\t\t$('#configure-login-service-dialog-modal').modal();\n\t\t\t}, 500)\n\t\t}\n\t};\n}) ();\n\n","(function() {\n\tif (!Accounts._loginButtons){\n\t\tAccounts._loginButtons = {};\n\t}\n\n\t// for convenience\n\tvar loginButtonsSession = Accounts._loginButtonsSession;\n\n\tUI.registerHelper(\"loginButtons\", function() {\n\t\treturn Template._loginButtons;\n\t});\n\n\t// shared between dropdown and single mode\n\tTemplate._loginButtons.events({\n\t\t'click #login-buttons-logout': function() {\n\t\t\tMeteor.logout(function(error) {\n\t\t\t\tloginButtonsSession.closeDropdown();\n\t\t\t\tif (typeof accountsUIBootstrap3.logoutCallback === 'function') {\n\t\t\t\t\taccountsUIBootstrap3.logoutCallback(error);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t//\n\t// loginButtonLoggedOut template\n\t//\n\tTemplate._loginButtonsLoggedOut.helpers({\n\t\tdropdown: function() {\n\t\t\treturn Accounts._loginButtons.dropdown();\n\t\t},\n\t\tservices: function() {\n\t\t\treturn Accounts._loginButtons.getLoginServices();\n\t\t},\n\t\tsingleService: function() {\n\t\t\tvar services = Accounts._loginButtons.getLoginServices();\n\t\t\tif (services.length !== 1){\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Shouldn't be rendering this template with more than one configured service\");\n\t\t\t}\n\t\t\treturn services[0];\n\t\t},\n\t\tconfigurationLoaded: function() {\n\t\t\treturn Accounts.loginServicesConfigured();\n\t\t}\n\t});\n\n\n\n\t//\n\t// loginButtonsLoggedIn template\n\t//\n\n\t// decide whether we should show a dropdown rather than a row of\n\t// buttons\n\tTemplate._loginButtonsLoggedIn.helpers({\n\t\tdropdown: function() {\n\t\t\treturn Accounts._loginButtons.dropdown();\n\t\t},\n\t\tdisplayName: function() {\n\t\t\treturn Accounts._loginButtons.displayName();\n\t\t}\n\t})\n\n\n\n\t//\n\t// loginButtonsMessage template\n\t//\n\n\tTemplate._loginButtonsMessages.helpers({\n\t\terrorMessage: function() {\n\t\t\treturn loginButtonsSession.get('errorMessage');\n\t\t},\n\t\tinfoMessage: function() {\n\t\t\treturn loginButtonsSession.get('infoMessage');\n\t\t}\n\t});\n\n\n\n\t//\n\t// helpers\n\t//\n\n\tAccounts._loginButtons.displayName = function() {\n\t\tvar user = Meteor.user();\n\t\tif (!user){\n\t\t\treturn '';\n\t\t}\n\n\t\tif (user.profile && user.profile.name){\n\t\t\treturn user.profile.name;\n\t\t}\n\t\tif (user.username){\n\t\t\treturn user.username;\n\t\t}\n\t\tif (user.emails && user.emails[0] && user.emails[0].address){\n\t\t\treturn user.emails[0].address;\n\t\t}\n\n\t\treturn '';\n\t};\n\n\tAccounts._loginButtons.getLoginServices = function() {\n\t\t// First look for OAuth services.\n\t\tvar services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : [];\n\n\t\t// Be equally kind to all login services. This also preserves\n\t\t// backwards-compatibility. (But maybe order should be\n\t\t// configurable?)\n\t\tservices.sort();\n\n\t\t// Add password, if it's there; it must come last.\n\t\tif (this.hasPasswordService()){\n\t\t\tservices.push('password');\n\t\t}\n\n\t\treturn _.map(services, function(name) {\n\t\t\treturn {\n\t\t\t\tname: name\n\t\t\t};\n\t\t});\n\t};\n\n\tAccounts._loginButtons.hasPasswordService = function() {\n\t\treturn !!Package['accounts-password'];\n\t};\n\n\tAccounts._loginButtons.dropdown = function() {\n\t\treturn this.hasPasswordService() || Accounts._loginButtons.getLoginServices().length > 1;\n\t};\n\n\t// XXX improve these. should this be in accounts-password instead?\n\t//\n\t// XXX these will become configurable, and will be validated on\n\t// the server as well.\n\tAccounts._loginButtons.validateUsername = function(username) {\n\t\tif (username.length >= 3) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.usernameTooShort'));\n\t\t\treturn false;\n\t\t}\n\t};\n\tAccounts._loginButtons.validateEmail = function(email) {\n\t\tif (Accounts.ui._passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\" && email === ''){\n\t\t\treturn true;\n\t\t}\n\n\t\tvar re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n\t\tif (re.test(email)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.invalidEmail'));\n\t\t\treturn false;\n\t\t}\n\t};\n\tAccounts._loginButtons.validatePassword = function(password, passwordAgain) {\n\t\tif (password.length >= 6) {\n\t\t\tif (passwordAgain && (password != passwordAgain)) {\n\t\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.passwordsDontMatch'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.passwordTooShort'));\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tAccounts._loginButtons.rendered = function() {\n\t\tdebugger;\n\t};\n\n})();\n\n","(function() {\n\t// for convenience\n\tvar loginButtonsSession = Accounts._loginButtonsSession;\n\n\tTemplate._loginButtonsLoggedOutSingleLoginButton.events({\n\t\t'click .login-button': function() {\n\t\t\tvar serviceName = this.name;\n\t\t\tloginButtonsSession.resetMessages();\n\t\t\tvar callback = function(err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tloginButtonsSession.closeDropdown();\n\t\t\t\t} else if (err instanceof Accounts.LoginCancelledError) {\n\t\t\t\t\t// do nothing\n\t\t\t\t} else if (err instanceof Accounts.ConfigError) {\n\t\t\t\t\tloginButtonsSession.configureService(serviceName);\n\t\t\t\t} else {\n\t\t\t\t\tloginButtonsSession.errorMessage(err.reason || \"Unknown error\");\n\t\t\t\t}\n\t\t\t};\n\n\t    // XXX Service providers should be able to specify their\n\t    // `Meteor.loginWithX` method name.\n\t    var loginWithService = Meteor[\"loginWith\" +\n\t                                  (serviceName === 'meteor-developer' ?\n\t                                   'MeteorDeveloperAccount' :\n\t                                   capitalize(serviceName))];\n\n\t    var options = {}; // use default scope unless specified\n\t    if (Accounts.ui._options.requestPermissions[serviceName])\n\t      options.requestPermissions = Accounts.ui._options.requestPermissions[serviceName];\n\t    if (Accounts.ui._options.requestOfflineToken[serviceName])\n\t      options.requestOfflineToken = Accounts.ui._options.requestOfflineToken[serviceName];\n\t    if (Accounts.ui._options.forceApprovalPrompt[serviceName])\n\t      options.forceApprovalPrompt = Accounts.ui._options.forceApprovalPrompt[serviceName];\n\n\t\t\tloginWithService(options, callback);\n\t\t}\n\t});\n\n\tTemplate._loginButtonsLoggedOutSingleLoginButton.helpers({\n\t\tconfigured: function() {\n\t\t\treturn !!Accounts.loginServiceConfiguration.findOne({\n\t\t\t\tservice: this.name\n\t\t\t});\n\t\t},\n\t\tcapitalizedName: function() {\n\t\t\tif (this.name === 'github'){\n\t\t\t// XXX we should allow service packages to set their capitalized name\n\t\t\t\treturn 'GitHub';\n\t\t\t} else {\n\t\t\t\treturn capitalize(this.name);\n\t\t\t}\n\t\t}\n\t});\n\n\n\t// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\n\tvar capitalize = function(str) {\n\t\tstr = (str == null) ? '' : String(str);\n\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\n\t};\n})();\n\n","(function() {\n\n\t// for convenience\n\tvar loginButtonsSession = Accounts._loginButtonsSession;\n\n\t// events shared between loginButtonsLoggedOutDropdown and\n\t// loginButtonsLoggedInDropdown\n\tTemplate._loginButtons.events({\n\t\t'click input, click .radio, click .checkbox, click option, click select': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t},\n\t\t'click #login-name-link, click #login-sign-in-link': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.set('dropdownVisible', true);\n\t\t\tMeteor.flush();\n\t\t},\n\t\t'click .login-close': function() {\n\t\t\tloginButtonsSession.closeDropdown();\n\t\t},\n\t\t'click .dropdown-toggle': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tTemplate._loginButtons.toggleDropdown();\n\t\t}\n\t});\n\n\tTemplate._loginButtons.toggleDropdown = function() {\n\t\ttoggleDropdown();\n\t\tfocusInput();\n\t};\n\n\t//\n\t// loginButtonsLoggedInDropdown template and related\n\t//\n\n\tTemplate._loginButtonsLoggedInDropdown.events({\n\t\t'click #login-buttons-open-change-password': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.resetMessages();\n\t\t\tloginButtonsSession.set('inChangePasswordFlow', true);\n\t\t\tMeteor.flush();\n\t\t}\n\t});\n\n\tTemplate._loginButtonsLoggedInDropdown.helpers({\n\t\tdisplayName: function() {\n\t\t\treturn Accounts._loginButtons.displayName();\n\t\t},\n\n\t\tinChangePasswordFlow: function() {\n\t\t\treturn loginButtonsSession.get('inChangePasswordFlow');\n\t\t},\n\n\t\tinMessageOnlyFlow: function() {\n\t\t\treturn loginButtonsSession.get('inMessageOnlyFlow');\n\t\t},\n\n\t\tdropdownVisible: function() {\n\t\t\treturn loginButtonsSession.get('dropdownVisible');\n\t\t}\n\t});\n\n\n\tTemplate._loginButtonsLoggedInDropdownActions.helpers({\n\t\tallowChangingPassword: function() {\n\t\t\t// it would be more correct to check whether the user has a password set,\n\t\t\t// but in order to do that we'd have to send more data down to the client,\n\t\t\t// and it'd be preferable not to send down the entire service.password document.\n\t\t\t//\n\t\t\t// instead we use the heuristic: if the user has a username or email set.\n\t\t\tvar user = Meteor.user();\n\t\t\treturn user.username || (user.emails && user.emails[0] && user.emails[0].address);\n\t\t},\n\t\tadditionalLoggedInDropdownActions: function() {\n\t\t\treturn Template._loginButtonsAdditionalLoggedInDropdownActions !== undefined;\n\t\t}\n\t});\n\n\n\t//\n\t// loginButtonsLoggedOutDropdown template and related\n\t//\n\n\tTemplate._loginButtonsLoggedOutAllServices.events({\n\t\t'click #login-buttons-password': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginOrSignup();\n\t\t},\n\n\t\t'keypress #forgot-password-email': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tif (event.keyCode === 13){\n\t\t\t\tforgotPassword();\n\t\t\t}\n\t\t},\n\n\t\t'click #login-buttons-forgot-password': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tforgotPassword();\n\t\t},\n\n\t\t'click #signup-link': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.resetMessages();\n\n\t\t\t// store values of fields before swtiching to the signup form\n\t\t\tvar username = trimmedElementValueById('login-username');\n\t\t\tvar email = trimmedElementValueById('login-email');\n\t\t\tvar usernameOrEmail = trimmedElementValueById('login-username-or-email');\n\t\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\t\tvar password = elementValueById('login-password');\n\n\t\t\tloginButtonsSession.set('inSignupFlow', true);\n\t\t\tloginButtonsSession.set('inForgotPasswordFlow', false);\n\n\t\t\t// force the ui to update so that we have the approprate fields to fill in\n\t\t\tMeteor.flush();\n\n\t\t\t// update new fields with appropriate defaults\n\t\t\tif (username !== null){\n\t\t\t\tdocument.getElementById('login-username').value = username;\n\t\t\t} else if (email !== null){\n\t\t\t\tdocument.getElementById('login-email').value = email;\n\t\t\t} else if (usernameOrEmail !== null){\n\t\t\t\tif (usernameOrEmail.indexOf('@') === -1){\n\t\t\t\t\tdocument.getElementById('login-username').value = usernameOrEmail;\n\t\t\t\t} else {\n\t\t\t\t\tdocument.getElementById('login-email').value = usernameOrEmail;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'click #forgot-password-link': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.resetMessages();\n\n\t\t\t// store values of fields before swtiching to the signup form\n\t\t\tvar email = trimmedElementValueById('login-email');\n\t\t\tvar usernameOrEmail = trimmedElementValueById('login-username-or-email');\n\n\t\t\tloginButtonsSession.set('inSignupFlow', false);\n\t\t\tloginButtonsSession.set('inForgotPasswordFlow', true);\n\n\t\t\t// force the ui to update so that we have the approprate fields to fill in\n\t\t\tMeteor.flush();\n\t\t\t//toggleDropdown();\n\n\t\t\t// update new fields with appropriate defaults\n\t\t\tif (email !== null){\n\t\t\t\tdocument.getElementById('forgot-password-email').value = email;\n\t\t\t} else if (usernameOrEmail !== null){\n\t\t\t\tif (usernameOrEmail.indexOf('@') !== -1){\n\t\t\t\t\tdocument.getElementById('forgot-password-email').value = usernameOrEmail;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'click #back-to-login-link': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.resetMessages();\n\n\t\t\tvar username = trimmedElementValueById('login-username');\n\t\t\tvar email = trimmedElementValueById('login-email') || trimmedElementValueById('forgot-password-email'); // Ughh. Standardize on names?\n\n\t\t\tloginButtonsSession.set('inSignupFlow', false);\n\t\t\tloginButtonsSession.set('inForgotPasswordFlow', false);\n\n\t\t\t// force the ui to update so that we have the approprate fields to fill in\n\t\t\tMeteor.flush();\n\n\t\t\tif (document.getElementById('login-username')){\n\t\t\t\tdocument.getElementById('login-username').value = username;\n\t\t\t}\n\t\t\tif (document.getElementById('login-email')){\n\t\t\t\tdocument.getElementById('login-email').value = email;\n\t\t\t}\n\t\t\t// \"login-password\" is preserved thanks to the preserve-inputs package\n\t\t\tif (document.getElementById('login-username-or-email')){\n\t\t\t\tdocument.getElementById('login-username-or-email').value = email || username;\n\t\t\t}\n\t\t},\n\t\t'keypress #login-username, keypress #login-email, keypress #login-username-or-email, keypress #login-password, keypress #login-password-again': function(event) {\n\t\t\tif (event.keyCode === 13){\n\t\t\t\tloginOrSignup();\n\t\t\t}\n\t\t}\n\t});\n\n\tTemplate._loginButtonsLoggedOutDropdown.helpers({\n\t  forbidClientAccountCreation: function() {\n\t    return Accounts._options.forbidClientAccountCreation;\n    }\n  });\n\n\tTemplate._loginButtonsLoggedOutAllServices.helpers({\n\t\t// additional classes that can be helpful in styling the dropdown\n\t\tadditionalClasses: function() {\n\t\t\tif (!Accounts.password) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tif (loginButtonsSession.get('inSignupFlow')) {\n\t\t\t\t\treturn 'login-form-create-account';\n\t\t\t\t} else if (loginButtonsSession.get('inForgotPasswordFlow')) {\n\t\t\t\t\treturn 'login-form-forgot-password';\n\t\t\t\t} else {\n\t\t\t\t\treturn 'login-form-sign-in';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdropdownVisible: function() {\n\t\t\treturn loginButtonsSession.get('dropdownVisible');\n\t\t},\n\n\t\tservices: function() {\n\t\t\treturn Accounts._loginButtons.getLoginServices();\n\t\t},\n\n\t\tisPasswordService: function() {\n\t\t\treturn this.name === 'password';\n\t\t},\n\n\t\thasOtherServices: function() {\n\t\t\treturn Accounts._loginButtons.getLoginServices().length > 1;\n\t\t},\n\n\t\thasPasswordService: function() {\n\t\t\treturn Accounts._loginButtons.hasPasswordService();\n\t\t}\n\t});\n\n\n\tTemplate._loginButtonsLoggedOutPasswordService.helpers({\n\t\tfields: function() {\n\t\t\tvar loginFields = [{\n\t\t\t\tfieldName: 'username-or-email',\n\t\t\t\tfieldLabel: i18n('loginFields.usernameOrEmail'),\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn _.contains(\n\t\t\t\t\t\t[\"USERNAME_AND_EMAIL_CONFIRM\", \"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\"],\n\t\t\t\t\t\tAccounts.ui._passwordSignupFields());\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'username',\n\t\t\t\tfieldLabel: i18n('loginFields.username'),\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn Accounts.ui._passwordSignupFields() === \"USERNAME_ONLY\";\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'email',\n\t\t\t\tfieldLabel: i18n('loginFields.email'),\n\t\t\t\tinputType: 'email',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn Accounts.ui._passwordSignupFields() === \"EMAIL_ONLY\";\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'password',\n\t\t\t\tfieldLabel: i18n('loginFields.password'),\n\t\t\t\tinputType: 'password',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}];\n\n\t\t\tvar signupFields = [{\n\t\t\t\tfieldName: 'username',\n\t\t\t\tfieldLabel: i18n('signupFields.username'),\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn _.contains(\n\t\t\t\t\t\t[\"USERNAME_AND_EMAIL_CONFIRM\", \"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],\n\t\t\t\t\t\tAccounts.ui._passwordSignupFields());\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'email',\n\t\t\t\tfieldLabel: i18n('signupFields.email'),\n\t\t\t\tinputType: 'email',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn _.contains(\n\t\t\t\t\t\t[\"USERNAME_AND_EMAIL_CONFIRM\", \"USERNAME_AND_EMAIL\", \"EMAIL_ONLY\"],\n\t\t\t\t\t\tAccounts.ui._passwordSignupFields());\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'email',\n\t\t\t\tfieldLabel: i18n('signupFields.emailOpt'),\n\t\t\t\tinputType: 'email',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn Accounts.ui._passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\";\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'password',\n\t\t\t\tfieldLabel: i18n('signupFields.password'),\n\t\t\t\tinputType: 'password',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'password-again',\n\t\t\t\tfieldLabel: i18n('signupFields.passwordAgain'),\n\t\t\t\tinputType: 'password',\n\t\t\t\tvisible: function() {\n\t\t\t\t\t// No need to make users double-enter their password if\n\t\t\t\t\t// they'll necessarily have an email set, since they can use\n\t\t\t\t\t// the \"forgot password\" flow.\n\t\t\t\t\treturn _.contains(\n\t\t\t\t\t\t[\"USERNAME_AND_EMAIL_CONFIRM\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],\n\t\t\t\t\t\tAccounts.ui._passwordSignupFields());\n\t\t\t\t}\n\t\t\t}];\n\n\t\t\tsignupFields = signupFields.concat(Accounts.ui._options.extraSignupFields);\n\n\t\t\treturn loginButtonsSession.get('inSignupFlow') ? signupFields : loginFields;\n\t\t},\n\n\t\tinForgotPasswordFlow: function() {\n\t\t\treturn loginButtonsSession.get('inForgotPasswordFlow');\n\t\t},\n\n\t\tinLoginFlow: function() {\n\t\t\treturn !loginButtonsSession.get('inSignupFlow') && !loginButtonsSession.get('inForgotPasswordFlow');\n\t\t},\n\n\t\tinSignupFlow: function() {\n\t\t\treturn loginButtonsSession.get('inSignupFlow');\n\t\t},\n\n\t\tshowForgotPasswordLink: function() {\n\t\t\treturn _.contains(\n\t\t\t\t[\"USERNAME_AND_EMAIL_CONFIRM\", \"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"EMAIL_ONLY\"],\n\t\t\t\tAccounts.ui._passwordSignupFields());\n\t\t},\n\n\t\tshowCreateAccountLink: function() {\n\t\t\treturn !Accounts._options.forbidClientAccountCreation;\n\t\t}\n\t});\n\n\tTemplate._loginButtonsFormField.helpers({\n\t\tequals: function(a, b) {\n\t\t\treturn (a === b);\n\t\t},\n\t\tinputType: function() {\n\t\t\treturn this.inputType || \"text\";\n\t\t},\n        inputTextual: function() {\n          return !_.contains([\"radio\", \"checkbox\", \"select\"], this.inputType);\n        }\n\t});\n\n\t//\n\t// loginButtonsChangePassword template\n\t//\n\tTemplate._loginButtonsChangePassword.events({\n\t\t'keypress #login-old-password, keypress #login-password, keypress #login-password-again': function(event) {\n\t\t\tif (event.keyCode === 13){\n\t\t\t\tchangePassword();\n\t\t\t}\n\t\t},\n\t\t'click #login-buttons-do-change-password': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tchangePassword();\n\t\t},\n\t\t'click #login-buttons-cancel-change-password': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.resetMessages();\n\t\t\tAccounts._loginButtonsSession.set('inChangePasswordFlow', false);\n\t\t\tMeteor.flush();\n\t\t}\n\t});\n\n\tTemplate._loginButtonsChangePassword.helpers({\n\t\tfields: function() {\n\t\t\treturn [{\n\t\t\t\tfieldName: 'old-password',\n\t\t\t\tfieldLabel: i18n('changePasswordFields.currentPassword'),\n\t\t\t\tinputType: 'password',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'password',\n\t\t\t\tfieldLabel: i18n('changePasswordFields.newPassword'),\n\t\t\t\tinputType: 'password',\n\t\t\t\tvisible: function() {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tfieldName: 'password-again',\n\t\t\t\tfieldLabel: i18n('changePasswordFields.newPasswordAgain'),\n\t\t\t\tinputType: 'password',\n\t\t\t\tvisible: function() {\n\t\t\t\t\t// No need to make users double-enter their password if\n\t\t\t\t\t// they'll necessarily have an email set, since they can use\n\t\t\t\t\t// the \"forgot password\" flow.\n\t\t\t\t\treturn _.contains(\n\t\t\t\t\t\t[\"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],\n\t\t\t\t\t\tAccounts.ui._passwordSignupFields());\n\t\t\t\t}\n\t\t\t}];\n\t\t}\n\t});\n\n\t//\n\t// helpers\n\t//\n\n\tvar elementValueById = function(id) {\n\t\tvar element = document.getElementById(id);\n\t\tif (!element){\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn element.value;\n\t\t}\n\t};\n\n\tvar elementValueByIdForRadio = function(fieldIdPrefix, radioOptions) {\n    var value = null;\n    for (i in radioOptions) {\n      var element = document.getElementById(fieldIdPrefix + '-' + radioOptions[i].id);\n\t\t\tif (element && element.checked){\n\t\t\t\tvalue =  element.value;\n\t\t\t}\n    }\n    return value;\n  };\n\n\tvar elementValueByIdForCheckbox = function(id) {\n\t\tvar element = document.getElementById(id);\n\t\treturn element.checked;\n  };\n\n\tvar trimmedElementValueById = function(id) {\n\t\tvar element = document.getElementById(id);\n\t\tif (!element){\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn element.value.replace(/^\\s*|\\s*$/g, \"\"); // trim;\n\t\t}\n\t};\n\n\tvar loginOrSignup = function() {\n\t\tif (loginButtonsSession.get('inSignupFlow')){\n\t\t\tsignup();\n\t\t} else {\n\t\t\tlogin();\n\t\t}\n\t};\n\n\tvar login = function() {\n\t\tloginButtonsSession.resetMessages();\n\n\t\tvar username = trimmedElementValueById('login-username');\n\t\tif (username && Accounts.ui._options.forceUsernameLowercase) {\n\t\t\tusername = username.toLowerCase();\n\t\t}\n\t\tvar email = trimmedElementValueById('login-email');\n\t\tif (email && Accounts.ui._options.forceEmailLowercase) {\n\t\t\temail = email.toLowerCase();\n\t\t}\n\t\tvar usernameOrEmail = trimmedElementValueById('login-username-or-email');\n\t\tif (usernameOrEmail && Accounts.ui._options.forceEmailLowercase && Accounts.ui._options.forceUsernameLowercase) {\n\t\t\tusernameOrEmail = usernameOrEmail.toLowerCase();\n\t\t}\n\n\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\tvar password = elementValueById('login-password');\n\t\tif (password && Accounts.ui._options.forcePasswordLowercase) {\n\t\t\tpassword = password.toLowerCase();\n\t\t}\n\n\t\tvar loginSelector;\n\t\tif (username !== null) {\n\t\t\tif (!Accounts._loginButtons.validateUsername(username)){\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tloginSelector = {\n\t\t\t\t\tusername: username\n\t\t\t\t};\n\t\t\t}\n\t\t} else if (email !== null) {\n\t\t\tif (!Accounts._loginButtons.validateEmail(email)){\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tloginSelector = {\n\t\t\t\t\temail: email\n\t\t\t\t};\n\t\t\t}\n\t\t} else if (usernameOrEmail !== null) {\n\t\t\t// XXX not sure how we should validate this. but this seems good enough (for now),\n\t\t\t// since an email must have at least 3 characters anyways\n\t\t\tif (!Accounts._loginButtons.validateUsername(usernameOrEmail)){\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tloginSelector = usernameOrEmail;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Unexpected -- no element to use as a login user selector\");\n\t\t}\n\n\t\tMeteor.loginWithPassword(loginSelector, password, function(error, result) {\n\t\t\tif (error) {\n\t\t\t\tif (error.reason == 'User not found'){\n\t\t\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.userNotFound'))\n\t\t\t\t} else if (error.reason == 'Incorrect password'){\n\t\t\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.incorrectPassword'))\n\t\t\t\t} else {\n\t\t\t\t\tloginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloginButtonsSession.closeDropdown();\n\t\t\t}\n\t\t});\n\t};\n\n\tvar toggleDropdown = function() {\n\t\t$(\"#login-dropdown-list\").toggleClass(\"open\");\n\t}\n\n\tvar focusInput = function() {\n\t\tsetTimeout(function() {\n\t\t\t$(\"#login-dropdown-list input\").first().focus();\n\t\t}, 0);\n\t};\n\n\tvar signup = function() {\n\t\tloginButtonsSession.resetMessages();\n\n\t\t// to be passed to Accounts.createUser\n\t\tvar options = {};\n\t\tif(typeof accountsUIBootstrap3.setCustomSignupOptions === 'function') {\n\t\t\toptions = accountsUIBootstrap3.setCustomSignupOptions();\n\t\t\tif (!(options instanceof Object)){ options = {}; }\n\t\t}\n\n\t\tvar username = trimmedElementValueById('login-username');\n\t\tif (username && Accounts.ui._options.forceUsernameLowercase) {\n\t\t\tusername = username.toLowerCase();\n\t\t}\n\t\tif (username !== null) {\n\t\t\tif (!Accounts._loginButtons.validateUsername(username)){\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\toptions.username = username;\n\t\t\t}\n\t\t}\n\n\t\tvar email = trimmedElementValueById('login-email');\n\t\tif (email && Accounts.ui._options.forceEmailLowercase) {\n\t\t\temail = email.toLowerCase();\n\t\t}\n\t\tif (email !== null) {\n\t\t\tif (!Accounts._loginButtons.validateEmail(email)){\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\toptions.email = email;\n\t\t\t}\n\t\t}\n\n\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\tvar password = elementValueById('login-password');\n\t\tif (password && Accounts.ui._options.forcePasswordLowercase) {\n\t\t\tpassword = password.toLowerCase();\n\t\t}\n\t\tif (!Accounts._loginButtons.validatePassword(password)){\n\t\t\treturn;\n\t\t} else {\n\t\t\toptions.password = password;\n\t\t}\n\n\t\tif (!matchPasswordAgainIfPresent()){\n\t\t\treturn;\n\t\t}\n\n\t\t// prepare the profile object\n\t\t// it could have already been set through setCustomSignupOptions\n\t\tif (!(options.profile instanceof Object)){\n\t\t\toptions.profile = {};\n\t\t}\n\n\t\t// define a proxy function to allow extraSignupFields set error messages\n\t\tvar errorFunction = function(errorMessage) {\n\t\t\tAccounts._loginButtonsSession.errorMessage(errorMessage);\n\t\t};\n\n\t\tvar invalidExtraSignupFields = false;\n\t\t// parse extraSignupFields to populate account's profile data\n\t\t_.each(Accounts.ui._options.extraSignupFields, function(field, index) {\n            var value = null;\n            var elementIdPrefix = 'login-';\n\n            if (field.inputType === 'radio') {\n              value = elementValueByIdForRadio(elementIdPrefix + field.fieldName, field.data);\n            } else if (field.inputType === 'checkbox') {\n            \tvalue = elementValueByIdForCheckbox(elementIdPrefix + field.fieldName);\n            } else {\n              value = elementValueById(elementIdPrefix + field.fieldName);\n            }\n\n\t\t\tif (typeof field.validate === 'function') {\n\t\t\t\tif (field.validate(value, errorFunction)) {\n\t\t\t\t\tif (typeof field.saveToProfile !== 'undefined' && !field.saveToProfile){\n\t\t\t\t\t\toptions[field.fieldName] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.profile[field.fieldName] = value;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinvalidExtraSignupFields = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toptions.profile[field.fieldName] = value;\n\t\t\t}\n\t\t});\n\n\t\tif (invalidExtraSignupFields){\n\t\t\treturn;\n\t\t}\n\n\t\tAccounts.createUser(options, function(error) {\n\t\t\tif (error) {\n\t\t\t\tif (error.reason == 'Signups forbidden'){\n\t\t\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.signupsForbidden'))\n\t\t\t\t} else {\n\t\t\t\t\tloginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloginButtonsSession.closeDropdown();\n\t\t\t}\n\t\t});\n\t};\n\n\tvar forgotPassword = function() {\n\t\tloginButtonsSession.resetMessages();\n\n\t\tvar email = trimmedElementValueById(\"forgot-password-email\");\n\t\tif (email.indexOf('@') !== -1) {\n\t\t\tAccounts.forgotPassword({\n\t\t\t\temail: email\n\t\t\t}, function(error) {\n\t\t\t\tif (error) {\n\t\t\t\t\tif (error.reason == 'User not found'){\n\t\t\t\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.userNotFound'))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tloginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tloginButtonsSession.infoMessage(i18n('infoMessages.emailSent'));\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tloginButtonsSession.errorMessage(i18n('forgotPasswordForm.invalidEmail'));\n\t\t}\n\t};\n\tvar changePassword = function() {\n\t\tloginButtonsSession.resetMessages();\n\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\tvar oldPassword = elementValueById('login-old-password');\n\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\tvar password = elementValueById('login-password');\n\n\t\tif (password == oldPassword) {\n\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.newPasswordSameAsOld'));\n\t\t\treturn;\n\t\t}\n\n\t\tif (!Accounts._loginButtons.validatePassword(password)){\n\t\t\treturn;\n\t\t}\n\n\t\tif (!matchPasswordAgainIfPresent()){\n\t\t\treturn;\n\t\t}\n\n\t\tAccounts.changePassword(oldPassword, password, function(error) {\n\t\t\tif (error) {\n\t\t\t\tif (error.reason == 'Incorrect password'){\n\t\t\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.incorrectPassword'))\n\t\t\t\t} else {\n\t\t\t\t\tloginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloginButtonsSession.infoMessage(i18n('infoMessages.passwordChanged'));\n\n\t\t\t\t// wait 3 seconds, then expire the msg\n\t\t\t\tMeteor.setTimeout(function() {\n\t\t\t\t\tloginButtonsSession.resetMessages();\n\t\t\t\t}, 3000);\n\t\t\t}\n\t\t});\n\t};\n\n\tvar matchPasswordAgainIfPresent = function() {\n\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\tvar passwordAgain = elementValueById('login-password-again');\n\t\tif (passwordAgain !== null) {\n\t\t\t// notably not trimmed. a password could (?) start or end with a space\n\t\t\tvar password = elementValueById('login-password');\n\t\t\tif (password !== passwordAgain) {\n\t\t\t\tloginButtonsSession.errorMessage(i18n('errorMessages.passwordsDontMatch'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n})();\n","(function() {\n\t// for convenience\n\tvar loginButtonsSession = Accounts._loginButtonsSession;\n\n\n\t//\n\t// populate the session so that the appropriate dialogs are\n\t// displayed by reading variables set by accounts-urls, which parses\n\t// special URLs. since accounts-ui depends on accounts-urls, we are\n\t// guaranteed to have these set at this point.\n\t//\n\n\tif (Accounts._resetPasswordToken) {\n\t\tloginButtonsSession.set('resetPasswordToken', Accounts._resetPasswordToken);\n\t}\n\n\tif (Accounts._enrollAccountToken) {\n\t\tloginButtonsSession.set('enrollAccountToken', Accounts._enrollAccountToken);\n\t}\n\n\t// Needs to be in Meteor.startup because of a package loading order\n\t// issue. We can't be sure that accounts-password is loaded earlier\n\t// than accounts-ui so Accounts.verifyEmail might not be defined.\n\tMeteor.startup(function() {\n\t\tif (Accounts._verifyEmailToken) {\n\t\t\tAccounts.verifyEmail(Accounts._verifyEmailToken, function(error) {\n\t\t\t\tAccounts._enableAutoLogin();\n\t\t\t\tif (!error){\n\t\t\t\t\tloginButtonsSession.set('justVerifiedEmail', true);\n\t\t\t\t}\n\t\t\t\t// XXX show something if there was an error.\n\t\t\t});\n\t\t}\n\t});\n\n\t//\n\t// resetPasswordDialog template\n\t//\n\n\tTemplate._resetPasswordDialog.events({\n\t\t'click #login-buttons-reset-password-button': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tresetPassword();\n\t\t},\n\t\t'keypress #reset-password-new-password': function(event) {\n\t\t\tif (event.keyCode === 13){\n\t\t\t\tresetPassword();\n\t\t\t}\n\t\t},\n\t\t'click #login-buttons-cancel-reset-password': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.set('resetPasswordToken', null);\n\t\t\tAccounts._enableAutoLogin();\n\t\t\t$('#login-buttons-reset-password-modal').modal(\"hide\");\n\t\t}\n\t});\n\n\tvar resetPassword = function() {\n\t\tloginButtonsSession.resetMessages();\n\t\tvar newPassword = document.getElementById('reset-password-new-password').value;\n\t\tvar passwordAgain= document.getElementById('reset-password-new-password-again').value;\n\t\tif (!Accounts._loginButtons.validatePassword(newPassword,passwordAgain)){\n\t\t\treturn;\n\t\t}\n\n\t\tAccounts.resetPassword(\n\t\t\tloginButtonsSession.get('resetPasswordToken'), newPassword,\n\t\t\tfunction(error) {\n\t\t\t\tif (error) {\n\t\t\t\t\tloginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n\t\t\t\t} else {\n\t\t\t\t\tloginButtonsSession.set('resetPasswordToken', null);\n\t\t\t\t\tAccounts._enableAutoLogin();\n\t\t\t\t\t$('#login-buttons-reset-password-modal').modal(\"hide\");\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tTemplate._resetPasswordDialog.helpers({\n\t\tinResetPasswordFlow: function() {\n\t\t\treturn loginButtonsSession.get('resetPasswordToken');\n\t\t}\n\t});\n\n\tTemplate._resetPasswordDialog.rendered = function() {\n\t\tvar $modal = $(this.find('#login-buttons-reset-password-modal'));\n\t\tif (!_.isFunction($modal.modal)) {\n\t\t\tconsole.error(\"You have to add a Bootstrap package, i.e. meteor add twbs:bootstrap\");\n\t\t} else {\n\t\t\t$modal.modal();\n\t\t}\n\t};\n\n\t//\n\t// enrollAccountDialog template\n\t//\n\n\tTemplate._enrollAccountDialog.events({\n\t\t'click #login-buttons-enroll-account-button': function() {\n\t\t\tenrollAccount();\n\t\t},\n\t\t'keypress #enroll-account-password': function(event) {\n\t\t\tif (event.keyCode === 13){\n\t\t\t\tenrollAccount();\n\t\t\t}\n\t\t},\n\t\t'click #login-buttons-cancel-enroll-account-button': function() {\n\t\t\tloginButtonsSession.set('enrollAccountToken', null);\n\t\t\tAccounts._enableAutoLogin();\n\t\t\t$modal.modal(\"hide\");\n\t\t}\n\t});\n\n\tvar enrollAccount = function() {\n\t\tloginButtonsSession.resetMessages();\n\t\tvar password = document.getElementById('enroll-account-password').value;\n\t\tvar passwordAgain= document.getElementById('enroll-account-password-again').value;\n\t\tif (!Accounts._loginButtons.validatePassword(password,passwordAgain)){\n\t\t\treturn;\n\t\t}\n\n\t\tAccounts.resetPassword(\n\t\t\tloginButtonsSession.get('enrollAccountToken'), password,\n\t\t\tfunction(error) {\n\t\t\t\tif (error) {\n\t\t\t\t\tloginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n\t\t\t\t} else {\n\t\t\t\t\tloginButtonsSession.set('enrollAccountToken', null);\n\t\t\t\t\tAccounts._enableAutoLogin();\n\t\t\t\t\t$modal.modal(\"hide\");\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tTemplate._enrollAccountDialog.helpers({\n\t\tinEnrollAccountFlow: function() {\n\t\t\treturn loginButtonsSession.get('enrollAccountToken');\n\t\t}\n\t});\n\n\tTemplate._enrollAccountDialog.rendered = function() {\n\t\t$modal = $(this.find('#login-buttons-enroll-account-modal'));\n\t\tif (!_.isFunction($modal.modal)) {\n\t\t\tconsole.error(\"You have to add a Bootstrap package, i.e. meteor add twbs:bootstrap\");\n\t\t} else {\n\t\t\t$modal.modal();\n\t\t}\n\t};\n\n\t//\n\t// justVerifiedEmailDialog template\n\t//\n\n\tTemplate._justVerifiedEmailDialog.events({\n\t\t'click #just-verified-dismiss-button': function() {\n\t\t\tloginButtonsSession.set('justVerifiedEmail', false);\n\t\t}\n\t});\n\n\tTemplate._justVerifiedEmailDialog.helpers({\n\t\tvisible: function() {\n\t\t\tif (loginButtonsSession.get('justVerifiedEmail')) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t$('#login-buttons-email-address-verified-modal').modal()\n\t\t\t\t}, 500)\n\t\t\t}\n\t\t\treturn loginButtonsSession.get('justVerifiedEmail');\n\t\t}\n\t});\n\n\n\t//\n\t// loginButtonsMessagesDialog template\n\t//\n\n\t// Template._loginButtonsMessagesDialog.rendered = function() {\n\t//   var $modal = $(this.find('#configure-login-service-dialog-modal'));\n\t// \t if (!_.isFunction($modal.modal)) {\n\t// \t \tconsole.error(\"You have to add a Bootstrap package, i.e. meteor add twbs:bootstrap\");\n\t// \t } else {\n\t// \t \t$modal.modal();\n\t// \t }\n\t// }\n\n\tTemplate._loginButtonsMessagesDialog.events({\n\t\t'click #messages-dialog-dismiss-button': function() {\n\t\t\tloginButtonsSession.resetMessages();\n\t\t}\n\t});\n\n\tTemplate._loginButtonsMessagesDialog.helpers({\n\t\tvisible: function() {\n\t\t\tvar hasMessage = loginButtonsSession.get('infoMessage') || loginButtonsSession.get('errorMessage');\n\t\t\treturn !Accounts._loginButtons.dropdown() && hasMessage;\n\t\t}\n\t});\n\n\n\t//\n\t// configureLoginServiceDialog template\n\t//\n\n\tTemplate._configureLoginServiceDialog.events({\n\t\t'click .configure-login-service-dismiss-button': function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tloginButtonsSession.set('configureLoginServiceDialogVisible', false);\n\t\t\t$('#configure-login-service-dialog-modal').modal('hide');\n\t\t},\n\t\t'click #configure-login-service-dialog-save-configuration': function() {\n\t\t\tif (loginButtonsSession.get('configureLoginServiceDialogVisible') &&\n\t\t\t\t!loginButtonsSession.get('configureLoginServiceDialogSaveDisabled')) {\n\t\t\t\t// Prepare the configuration document for this login service\n\t\t\t\tvar serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');\n\t\t\t\tvar configuration = {\n\t\t\t\t\tservice: serviceName\n\t\t\t\t};\n\t\t\t\t_.each(configurationFields(), function(field) {\n\t\t\t\t\tconfiguration[field.property] = document.getElementById(\n\t\t\t\t\t\t'configure-login-service-dialog-' + field.property).value\n\t\t\t\t\t\t.replace(/^\\s*|\\s*$/g, \"\"); // trim;\n\t\t\t\t});\n\n\t\t\t\tconfiguration.loginStyle =\n\t\t\t\t$('#configure-login-service-dialog input[name=\"loginStyle\"]:checked')\n\t\t\t\t.val();\n\n\t\t\t\t// Configure this login service\n\t\t\t\tMeteor.call(\"configureLoginService\", configuration, function(error, result) {\n\t\t\t\t\tif (error){\n\t\t\t\t\t\tMeteor._debug(\"Error configuring login service \" + serviceName, error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tloginButtonsSession.set('configureLoginServiceDialogVisible', false);\n\t\t\t\t\t}\n\t\t\t\t\t$('#configure-login-service-dialog-modal').modal('hide');\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t// IE8 doesn't support the 'input' event, so we'll run this on the keyup as\n\t\t// well. (Keeping the 'input' event means that this also fires when you use\n\t\t// the mouse to change the contents of the field, eg 'Cut' menu item.)\n\t\t'input, keyup input': function(event) {\n\t\t\t// if the event fired on one of the configuration input fields,\n\t\t\t// check whether we should enable the 'save configuration' button\n\t\t\tif (event.target.id.indexOf('configure-login-service-dialog') === 0){\n\t\t\t\tupdateSaveDisabled();\n\t\t\t}\n\t\t}\n\t});\n\n\t// check whether the 'save configuration' button should be enabled.\n\t// this is a really strange way to implement this and a Forms\n\t// Abstraction would make all of this reactive, and simpler.\n\tvar updateSaveDisabled = function() {\n\t\tvar anyFieldEmpty = _.any(configurationFields(), function(field) {\n\t\t\treturn document.getElementById(\n\t\t\t\t'configure-login-service-dialog-' + field.property).value === '';\n\t\t});\n\n\t\tloginButtonsSession.set('configureLoginServiceDialogSaveDisabled', anyFieldEmpty);\n\t};\n\n\t// Returns the appropriate template for this login service.  This\n\t// template should be defined in the service's package\n\tvar configureLoginServiceDialogTemplateForService = function() {\n\t\tvar serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');\n\t\treturn Template['configureLoginServiceDialogFor' + capitalize(serviceName)];\n\t};\n\n\tvar configurationFields = function() {\n\t\tvar template = configureLoginServiceDialogTemplateForService();\n\t\treturn template.fields();\n\t};\n\n\tTemplate._configureLoginServiceDialog.helpers({\n\t\tconfigurationFields: function() {\n\t\t\treturn configurationFields();\n\t\t},\n\n\t\tvisible: function() {\n\t\t\treturn loginButtonsSession.get('configureLoginServiceDialogVisible');\n\t\t},\n\n\t\tconfigurationSteps: function() {\n\t\t\t// renders the appropriate template\n\t\t\treturn configureLoginServiceDialogTemplateForService();\n\t\t},\n\n\t\tsaveDisabled: function() {\n\t\t\treturn loginButtonsSession.get('configureLoginServiceDialogSaveDisabled');\n\t\t}\n\t});\n\n\n\t;\n\n\n\n\t// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\n\tvar capitalize = function(str) {\n\t\tstr = str == null ? '' : String(str);\n\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\n\t};\n\n})();\n\n"]}